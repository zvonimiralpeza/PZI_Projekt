{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VCard/VCard.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n\n// Styles\nimport \"./VCard.css\";\n\n// Components\nimport { VCardActions } from \"./VCardActions.mjs\";\nimport { VCardItem } from \"./VCardItem.mjs\";\nimport { VCardText } from \"./VCardText.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVCardProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  disabled: Boolean,\n  flat: Boolean,\n  hover: Boolean,\n  image: String,\n  link: {\n    type: Boolean,\n    default: undefined\n  },\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object],\n    default: true\n  },\n  subtitle: [String, Number],\n  text: [String, Number],\n  title: [String, Number],\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'elevated'\n  })\n}, 'VCard');\nexport const VCard = genericComponent()({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: makeVCardProps(),\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value));\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title != null);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle != null);\n      const hasHeader = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasCardItem = hasHeader || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text != null);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable.value\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value, props.class],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"href\": link.href.value,\n        \"onClick\": isClickable.value && link.navigate,\n        \"tabindex\": props.disabled ? -1 : undefined\n      }, {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-card__image\"\n        }, [!slots.image ? _createVNode(VImg, {\n          \"key\": \"image-img\",\n          \"cover\": true,\n          \"src\": props.image\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"image-defaults\",\n          \"disabled\": !props.image,\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, slots.image)]), _createVNode(LoaderSlot, {\n          \"name\": \"v-card\",\n          \"active\": !!props.loading,\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading\n        }, {\n          default: slots.loader\n        }), hasCardItem && _createVNode(VCardItem, {\n          \"key\": \"item\",\n          \"prependAvatar\": props.prependAvatar,\n          \"prependIcon\": props.prependIcon,\n          \"title\": props.title,\n          \"subtitle\": props.subtitle,\n          \"appendAvatar\": props.appendAvatar,\n          \"appendIcon\": props.appendIcon\n        }, {\n          default: slots.item,\n          prepend: slots.prepend,\n          title: slots.title,\n          subtitle: slots.subtitle,\n          append: slots.append\n        }), hasText && _createVNode(VCardText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [slots.text?.() ?? props.text]\n        }), slots.default?.(), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        }), genOverlays(isClickable.value, 'v-card')]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple]]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCard.mjs.map",
      "start": 1721076633969,
      "end": 1721076634129,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721076634129,
      "end": 1721076634129,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721076634130,
      "end": 1721076634130,
      "order": "normal"
    }
  ]
}
