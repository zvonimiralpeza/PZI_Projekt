{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VSelectionControlGroup/VSelectionControlGroup.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSelectionControlGroup.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeDensityProps } from \"../../composables/density.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeThemeProps } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue';\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const VSelectionControlGroupSymbol = Symbol.for('vuetify:selection-control-group');\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: Boolean,\n    default: true\n  },\n  multiple: {\n    type: Boolean,\n    default: null\n  },\n  name: String,\n  readonly: {\n    type: Boolean,\n    default: null\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function,\n    default: deepEqual\n  },\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps()\n}, 'SelectionControlGroup');\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl'\n  })\n}, 'VSelectionControlGroup');\nexport const VSelectionControlGroup = genericComponent()({\n  name: 'VSelectionControlGroup',\n  props: makeVSelectionControlGroupProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const modelValue = useProxiedModel(props, 'modelValue');\n    const uid = getUid();\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`);\n    const name = computed(() => props.name || id.value);\n    const updateHandlers = new Set();\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn());\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb);\n        onScopeDispose(() => {\n          updateHandlers.delete(cb);\n        });\n      }\n    });\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || props.multiple == null && Array.isArray(modelValue.value)),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator')\n      }\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-selection-control-group', {\n        'v-selection-control-group--inline': props.inline\n      }, props.class],\n      \"style\": props.style,\n      \"role\": props.type === 'radio' ? 'radiogroup' : undefined\n    }, [slots.default?.()]));\n    return {};\n  }\n});\n//# sourceMappingURL=VSelectionControlGroup.mjs.map",
      "start": 1726159575546,
      "end": 1726159575890,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1726159575892,
      "end": 1726159575892,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726159575893,
      "end": 1726159575893,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726159575894,
      "end": 1726159575894,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726159575894,
      "end": 1726159575894,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726159575894,
      "end": 1726159575894,
      "order": "normal"
    }
  ]
}
