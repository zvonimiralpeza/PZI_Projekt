{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VList/VList.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VList.css\";\n\n// Components\nimport { VListChildren } from \"./VListChildren.mjs\"; // Composables\nimport { createList } from \"./list.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeItemsProps } from \"../../composables/list-items.mjs\";\nimport { makeNestedProps, useNested } from \"../../composables/nested/nested.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\"; // Utilities\nimport { computed, ref, shallowRef, toRef } from 'vue';\nimport { focusChild, genericComponent, getPropertyFromItem, omit, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nfunction isPrimitive(value) {\n  return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';\n}\nfunction transformItem(props, item) {\n  const type = getPropertyFromItem(item, props.itemType, 'item');\n  const title = isPrimitive(item) ? item : getPropertyFromItem(item, props.itemTitle);\n  const value = getPropertyFromItem(item, props.itemValue, undefined);\n  const children = getPropertyFromItem(item, props.itemChildren);\n  const itemProps = props.itemProps === true ? omit(item, ['children']) : getPropertyFromItem(item, props.itemProps);\n  const _props = {\n    title,\n    value,\n    ...itemProps\n  };\n  return {\n    type,\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: type === 'item' && children ? transformItems(props, children) : undefined,\n    raw: item\n  };\n}\nfunction transformItems(props, items) {\n  const array = [];\n  for (const item of items) {\n    array.push(transformItem(props, item));\n  }\n  return array;\n}\nfunction useListItems(props) {\n  const items = computed(() => transformItems(props, props.items));\n  return {\n    items\n  };\n}\nexport const makeVListProps = propsFactory({\n  baseColor: String,\n  /* @deprecated */\n  activeColor: String,\n  activeClass: String,\n  bgColor: String,\n  disabled: Boolean,\n  lines: {\n    type: [Boolean, String],\n    default: 'one'\n  },\n  slim: Boolean,\n  nav: Boolean,\n  ...makeNestedProps({\n    selectStrategy: 'single-leaf',\n    openStrategy: 'list'\n  }),\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  itemType: {\n    type: String,\n    default: 'type'\n  },\n  ...makeItemsProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'text'\n  })\n}, 'VList');\nexport const VList = genericComponent()({\n  name: 'VList',\n  props: makeVListProps(),\n  emits: {\n    'update:selected': value => true,\n    'update:opened': value => true,\n    'click:open': value => true,\n    'click:select': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      items\n    } = useListItems(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      open,\n      select\n    } = useNested(props);\n    const lineClasses = computed(() => props.lines ? `v-list--${props.lines}-line` : undefined);\n    const activeColor = toRef(props, 'activeColor');\n    const baseColor = toRef(props, 'baseColor');\n    const color = toRef(props, 'color');\n    createList();\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        baseColor,\n        color\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor,\n        baseColor,\n        color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        slim: toRef(props, 'slim'),\n        variant: toRef(props, 'variant')\n      }\n    });\n    const isFocused = shallowRef(false);\n    const contentRef = ref();\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onFocusout(e) {\n      isFocused.value = false;\n    }\n    function onFocus(e) {\n      if (!isFocused.value && !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget))) focus();\n    }\n    function onKeydown(e) {\n      if (!contentRef.value) return;\n      if (e.key === 'ArrowDown') {\n        focus('next');\n      } else if (e.key === 'ArrowUp') {\n        focus('prev');\n      } else if (e.key === 'Home') {\n        focus('first');\n      } else if (e.key === 'End') {\n        focus('last');\n      } else {\n        return;\n      }\n      e.preventDefault();\n    }\n    function focus(location) {\n      if (contentRef.value) {\n        return focusChild(contentRef.value, location);\n      }\n    }\n    useRender(() => {\n      return _createVNode(props.tag, {\n        \"ref\": contentRef,\n        \"class\": ['v-list', {\n          'v-list--disabled': props.disabled,\n          'v-list--nav': props.nav\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, dimensionStyles.value, props.style],\n        \"tabindex\": props.disabled || isFocused.value ? -1 : 0,\n        \"role\": \"listbox\",\n        \"aria-activedescendant\": undefined,\n        \"onFocusin\": onFocusin,\n        \"onFocusout\": onFocusout,\n        \"onFocus\": onFocus,\n        \"onKeydown\": onKeydown\n      }, {\n        default: () => [_createVNode(VListChildren, {\n          \"items\": items.value,\n          \"returnObject\": props.returnObject\n        }, slots)]\n      });\n    });\n    return {\n      open,\n      select,\n      focus\n    };\n  }\n});\n//# sourceMappingURL=VList.mjs.map",
      "start": 1726412153937,
      "end": 1726412154431,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1726412154431,
      "end": 1726412154431,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726412154431,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726412154432,
      "end": 1726412154432,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726412154432,
      "end": 1726412154433,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726412154432,
      "end": 1726412154433,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726412154433,
      "end": 1726412154433,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726412154433,
      "end": 1726412154433,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1726412154433,
      "end": 1726412154433,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726412154433,
      "end": 1726412154433,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726412154433,
      "end": 1726412154433,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726412154433,
      "end": 1726412154433,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726412154433,
      "end": 1726412154433,
      "order": "normal"
    }
  ]
}
