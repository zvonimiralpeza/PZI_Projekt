{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VProgressCircular/VProgressCircular.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VProgressCircular.css\";\n\n// Composables\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVProgressCircularProps = propsFactory({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String],\n  modelValue: {\n    type: [Number, String],\n    default: 0\n  },\n  rotate: {\n    type: [Number, String],\n    default: 0\n  },\n  width: {\n    type: [Number, String],\n    default: 4\n  },\n  ...makeComponentProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({\n    tag: 'div'\n  }),\n  ...makeThemeProps()\n}, 'VProgressCircular');\nexport const VProgressCircular = genericComponent()({\n  name: 'VProgressCircular',\n  props: makeVProgressCircularProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const MAGIC_RADIUS_CONSTANT = 20;\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT;\n    const root = ref();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    const {\n      textColorClasses: underlayColorClasses,\n      textColorStyles: underlayColorStyles\n    } = useTextColor(toRef(props, 'bgColor'));\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const {\n      resizeRef,\n      contentRect\n    } = useResizeObserver();\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))));\n    const width = computed(() => Number(props.width));\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value ? Number(props.size) : contentRect.value ? contentRect.value.width : Math.max(width.value, 32);\n    });\n    const diameter = computed(() => MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value) * 2);\n    const strokeWidth = computed(() => width.value / size.value * diameter.value);\n    const strokeDashOffset = computed(() => convertToUnit((100 - normalizedValue.value) / 100 * CIRCUMFERENCE));\n    watchEffect(() => {\n      intersectionRef.value = root.value;\n      resizeRef.value = root.value;\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": root,\n      \"class\": ['v-progress-circular', {\n        'v-progress-circular--indeterminate': !!props.indeterminate,\n        'v-progress-circular--visible': isIntersecting.value,\n        'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink'\n      }, themeClasses.value, sizeClasses.value, textColorClasses.value, props.class],\n      \"style\": [sizeStyles.value, textColorStyles.value, props.style],\n      \"role\": \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value\n    }, {\n      default: () => [_createVNode(\"svg\", {\n        \"style\": {\n          transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`\n        },\n        \"xmlns\": \"http://www.w3.org/2000/svg\",\n        \"viewBox\": `0 0 ${diameter.value} ${diameter.value}`\n      }, [_createVNode(\"circle\", {\n        \"class\": ['v-progress-circular__underlay', underlayColorClasses.value],\n        \"style\": underlayColorStyles.value,\n        \"fill\": \"transparent\",\n        \"cx\": \"50%\",\n        \"cy\": \"50%\",\n        \"r\": MAGIC_RADIUS_CONSTANT,\n        \"stroke-width\": strokeWidth.value,\n        \"stroke-dasharray\": CIRCUMFERENCE,\n        \"stroke-dashoffset\": 0\n      }, null), _createVNode(\"circle\", {\n        \"class\": \"v-progress-circular__overlay\",\n        \"fill\": \"transparent\",\n        \"cx\": \"50%\",\n        \"cy\": \"50%\",\n        \"r\": MAGIC_RADIUS_CONSTANT,\n        \"stroke-width\": strokeWidth.value,\n        \"stroke-dasharray\": CIRCUMFERENCE,\n        \"stroke-dashoffset\": strokeDashOffset.value\n      }, null)]), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-progress-circular__content\"\n      }, [slots.default({\n        value: normalizedValue.value\n      })])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VProgressCircular.mjs.map",
      "start": 1710361569533,
      "end": 1710361569700,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710361569700,
      "end": 1710361569700,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710361569701,
      "end": 1710361569701,
      "order": "normal"
    }
  ]
}
