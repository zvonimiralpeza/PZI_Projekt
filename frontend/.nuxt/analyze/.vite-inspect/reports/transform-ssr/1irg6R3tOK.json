{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VBtn/VBtn.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VBtn.css\";\n\n// Components\nimport { VBtnToggleSymbol } from \"../VBtnToggle/VBtnToggle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\"; // Composables\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { useSelectLink } from \"../../composables/selectLink.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVBtnProps = propsFactory({\n  active: {\n    type: Boolean,\n    default: undefined\n  },\n  symbol: {\n    type: null,\n    default: VBtnToggleSymbol\n  },\n  flat: Boolean,\n  icon: [Boolean, String, Function, Object],\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  block: Boolean,\n  slim: Boolean,\n  stacked: Boolean,\n  ripple: {\n    type: [Boolean, Object],\n    default: true\n  },\n  text: String,\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({\n    tag: 'button'\n  }),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'elevated'\n  })\n}, 'VBtn');\nexport const VBtn = genericComponent()({\n  name: 'VBtn',\n  directives: {\n    Ripple\n  },\n  props: makeVBtnProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    const group = useGroupItem(props, props.symbol, false);\n    const link = useLink(props, attrs);\n    const isActive = computed(() => {\n      if (props.active !== undefined) {\n        return props.active;\n      }\n      if (link.isLink.value) {\n        return link.isActive?.value;\n      }\n      return group?.isSelected.value;\n    });\n    const isDisabled = computed(() => group?.disabled.value || props.disabled);\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border);\n    });\n    const valueAttr = computed(() => {\n      if (props.value === undefined || typeof props.value === 'symbol') return undefined;\n      return Object(props.value) === props.value ? JSON.stringify(props.value, null, 0) : props.value;\n    });\n    function onClick(e) {\n      if (isDisabled.value || link.isLink.value && (e.metaKey || e.ctrlKey || e.shiftKey || e.button !== 0 || attrs.target === '_blank')) return;\n      link.navigate?.(e);\n      group?.toggle();\n    }\n    useSelectLink(link, group?.select);\n    useRender(() => {\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasPrepend = !!(props.prependIcon || slots.prepend);\n      const hasAppend = !!(props.appendIcon || slots.append);\n      const hasIcon = !!(props.icon && props.icon !== true);\n      const hasColor = group?.isSelected.value && (!link.isLink.value || link.isActive?.value) || !group || link.isActive?.value;\n      return _withDirectives(_createVNode(Tag, {\n        \"type\": Tag === 'a' ? undefined : 'button',\n        \"class\": ['v-btn', group?.selectedClass.value, {\n          'v-btn--active': isActive.value,\n          'v-btn--block': props.block,\n          'v-btn--disabled': isDisabled.value,\n          'v-btn--elevated': isElevated.value,\n          'v-btn--flat': props.flat,\n          'v-btn--icon': !!props.icon,\n          'v-btn--loading': props.loading,\n          'v-btn--slim': props.slim,\n          'v-btn--stacked': props.stacked\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value, props.class],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value, locationStyles.value, sizeStyles.value, props.style],\n        \"disabled\": isDisabled.value || undefined,\n        \"href\": link.href.value,\n        \"onClick\": onClick,\n        \"value\": valueAttr.value\n      }, {\n        default: () => [genOverlays(true, 'v-btn'), !props.icon && hasPrepend && _createVNode(\"span\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-btn__prepend\"\n        }, [!slots.prepend ? _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"icon\": props.prependIcon\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !props.prependIcon,\n          \"defaults\": {\n            VIcon: {\n              icon: props.prependIcon\n            }\n          }\n        }, slots.prepend)]), _createVNode(\"span\", {\n          \"class\": \"v-btn__content\",\n          \"data-no-activator\": \"\"\n        }, [!slots.default && hasIcon ? _createVNode(VIcon, {\n          \"key\": \"content-icon\",\n          \"icon\": props.icon\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"content-defaults\",\n          \"disabled\": !hasIcon,\n          \"defaults\": {\n            VIcon: {\n              icon: props.icon\n            }\n          }\n        }, {\n          default: () => [slots.default?.() ?? props.text]\n        })]), !props.icon && hasAppend && _createVNode(\"span\", {\n          \"key\": \"append\",\n          \"class\": \"v-btn__append\"\n        }, [!slots.append ? _createVNode(VIcon, {\n          \"key\": \"append-icon\",\n          \"icon\": props.appendIcon\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"append-defaults\",\n          \"disabled\": !props.appendIcon,\n          \"defaults\": {\n            VIcon: {\n              icon: props.appendIcon\n            }\n          }\n        }, slots.append)]), !!props.loading && _createVNode(\"span\", {\n          \"key\": \"loader\",\n          \"class\": \"v-btn__loader\"\n        }, [slots.loader?.() ?? _createVNode(VProgressCircular, {\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading,\n          \"indeterminate\": true,\n          \"size\": \"23\",\n          \"width\": \"2\"\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), !isDisabled.value && props.ripple, null]]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VBtn.mjs.map",
      "start": 1726415494439,
      "end": 1726415496485,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1726415496485,
      "end": 1726415496485,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726415496485,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726415496486,
      "end": 1726415496486,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726415496486,
      "end": 1726415496487,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726415496487,
      "end": 1726415496487,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726415496487,
      "end": 1726415496487,
      "order": "normal"
    }
  ]
}
