{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/composables/forwardRefs.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Types\n\nconst Refs = Symbol('Forwarded refs');\n\n/** Omit properties starting with P */\n\nfunction getDescriptor(obj, key) {\n  let currentObj = obj;\n  while (currentObj) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(currentObj, key);\n    if (descriptor) return descriptor;\n    currentObj = Object.getPrototypeOf(currentObj);\n  }\n  return undefined;\n}\nexport function forwardRefs(target) {\n  for (var _len = arguments.length, refs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    refs[_key - 1] = arguments[_key];\n  }\n  target[Refs] = refs;\n  return new Proxy(target, {\n    get(target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key);\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return;\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key);\n          return typeof val === 'function' ? val.bind(ref.value) : val;\n        }\n      }\n    },\n    has(target, key) {\n      if (Reflect.has(target, key)) {\n        return true;\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return false;\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    set(target, key, value) {\n      if (Reflect.has(target, key)) {\n        return Reflect.set(target, key, value);\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return false;\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          return Reflect.set(ref.value, key, value);\n        }\n      }\n      return false;\n    },\n    getOwnPropertyDescriptor(target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key);\n      if (descriptor) return descriptor;\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return;\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue;\n        const descriptor = getDescriptor(ref.value, key) ?? ('_' in ref.value ? getDescriptor(ref.value._?.setupState, key) : undefined);\n        if (descriptor) return descriptor;\n      }\n\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        const childRefs = ref.value && ref.value[Refs];\n        if (!childRefs) continue;\n        const queue = childRefs.slice();\n        while (queue.length) {\n          const ref = queue.shift();\n          const descriptor = getDescriptor(ref.value, key);\n          if (descriptor) return descriptor;\n          const childRefs = ref.value && ref.value[Refs];\n          if (childRefs) queue.push(...childRefs);\n        }\n      }\n      return undefined;\n    }\n  });\n}\n//# sourceMappingURL=forwardRefs.mjs.map",
      "start": 1721074037343,
      "end": 1721074037519,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074037519,
      "end": 1721074037519,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721074037520,
      "end": 1721074037520,
      "order": "normal"
    }
  ]
}
