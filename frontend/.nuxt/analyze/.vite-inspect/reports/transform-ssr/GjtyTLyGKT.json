{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VGrid/VRow.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { breakpoints } from \"../../composables/display.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nconst ALIGNMENT = ['start', 'end', 'center'];\nconst SPACE = ['space-between', 'space-around', 'space-evenly'];\nfunction makeRowProps(prefix, def) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val);\n    props[prefixKey] = def();\n    return props;\n  }, {});\n}\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'];\nconst alignValidator = str => ALIGN_VALUES.includes(str);\nconst alignProps = makeRowProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator\n}));\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE];\nconst justifyValidator = str => JUSTIFY_VALUES.includes(str);\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator\n}));\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'];\nconst alignContentValidator = str => ALIGN_CONTENT_VALUES.includes(str);\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator\n}));\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\nfunction breakpointClass(type, prop, val) {\n  let className = classMap[type];\n  if (val == null) {\n    return undefined;\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  // .align-items-sm-center\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nexport const makeVRowProps = propsFactory({\n  dense: Boolean,\n  noGutters: Boolean,\n  align: {\n    type: String,\n    default: null,\n    validator: alignValidator\n  },\n  ...alignProps,\n  justify: {\n    type: String,\n    default: null,\n    validator: justifyValidator\n  },\n  ...justifyProps,\n  alignContent: {\n    type: String,\n    default: null,\n    validator: alignContentValidator\n  },\n  ...alignContentProps,\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VRow');\nexport const VRow = genericComponent()({\n  name: 'VRow',\n  props: makeVRowProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: ['v-row', classes.value, props.class],\n      style: props.style\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VRow.mjs.map",
      "start": 1720959358367,
      "end": 1720959358573,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720959358573,
      "end": 1720959358573,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720959358573,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720959358574,
      "end": 1720959358574,
      "order": "normal"
    }
  ]
}
