{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/composables/icons.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Icons\nimport { aliases, mdi } from \"../iconsets/mdi.mjs\"; // Utilities\nimport { computed, inject, unref } from 'vue';\nimport { defineComponent, genericComponent, mergeDeep, propsFactory } from \"../util/index.mjs\"; // Types\nexport const IconValue = [String, Function, Object, Array];\nexport const IconSymbol = Symbol.for('vuetify:icons');\nexport const makeIconProps = propsFactory({\n  icon: {\n    type: IconValue\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: String,\n    required: true\n  }\n}, 'icon');\nexport const VComponentIcon = genericComponent()({\n  name: 'VComponentIcon',\n  props: makeIconProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    return () => {\n      const Icon = props.icon;\n      return _createVNode(props.tag, null, {\n        default: () => [props.icon ? _createVNode(Icon, null, null) : slots.default?.()]\n      });\n    };\n  }\n});\nexport const VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n  inheritAttrs: false,\n  props: makeIconProps(),\n  setup(props, _ref2) {\n    let {\n      attrs\n    } = _ref2;\n    return () => {\n      return _createVNode(props.tag, _mergeProps(attrs, {\n        \"style\": null\n      }), {\n        default: () => [_createVNode(\"svg\", {\n          \"class\": \"v-icon__svg\",\n          \"xmlns\": \"http://www.w3.org/2000/svg\",\n          \"viewBox\": \"0 0 24 24\",\n          \"role\": \"img\",\n          \"aria-hidden\": \"true\"\n        }, [Array.isArray(props.icon) ? props.icon.map(path => Array.isArray(path) ? _createVNode(\"path\", {\n          \"d\": path[0],\n          \"fill-opacity\": path[1]\n        }, null) : _createVNode(\"path\", {\n          \"d\": path\n        }, null)) : _createVNode(\"path\", {\n          \"d\": props.icon\n        }, null)])]\n      });\n    };\n  }\n});\nexport const VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n  props: makeIconProps(),\n  setup(props) {\n    return () => {\n      return _createVNode(props.tag, null, {\n        default: () => [props.icon]\n      });\n    };\n  }\n});\nexport const VClassIcon = defineComponent({\n  name: 'VClassIcon',\n  props: makeIconProps(),\n  setup(props) {\n    return () => {\n      return _createVNode(props.tag, {\n        \"class\": props.icon\n      }, null);\n    };\n  }\n});\nexport const defaultSets = {\n  svg: {\n    component: VSvgIcon\n  },\n  class: {\n    component: VClassIcon\n  }\n};\n\n// Composables\nexport function createIcons(options) {\n  return mergeDeep({\n    defaultSet: 'mdi',\n    sets: {\n      ...defaultSets,\n      mdi\n    },\n    aliases: {\n      ...aliases,\n      /* eslint-disable max-len */\n      vuetify: ['M8.2241 14.2009L12 21L22 3H14.4459L8.2241 14.2009Z', ['M7.26303 12.4733L7.00113 12L2 3H12.5261C12.5261 3 12.5261 3 12.5261 3L7.26303 12.4733Z', 0.6]],\n      'vuetify-outline': 'svg:M7.26 12.47 12.53 3H2L7.26 12.47ZM14.45 3 8.22 14.2 12 21 22 3H14.45ZM18.6 5 12 16.88 10.51 14.2 15.62 5ZM7.26 8.35 5.4 5H9.13L7.26 8.35Z'\n      /* eslint-enable max-len */\n    }\n  }, options);\n}\nexport const useIcon = props => {\n  const icons = inject(IconSymbol);\n  if (!icons) throw new Error('Missing Vuetify Icons provide!');\n  const iconData = computed(() => {\n    const iconAlias = unref(props);\n    if (!iconAlias) return {\n      component: VComponentIcon\n    };\n    let icon = iconAlias;\n    if (typeof icon === 'string') {\n      icon = icon.trim();\n      if (icon.startsWith('$')) {\n        icon = icons.aliases?.[icon.slice(1)];\n      }\n    }\n    if (!icon) throw new Error(`Could not find aliased icon \"${iconAlias}\"`);\n    if (Array.isArray(icon)) {\n      return {\n        component: VSvgIcon,\n        icon\n      };\n    } else if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon\n      };\n    }\n    const iconSetName = Object.keys(icons.sets).find(setName => typeof icon === 'string' && icon.startsWith(`${setName}:`));\n    const iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon;\n    const iconSet = icons.sets[iconSetName ?? icons.defaultSet];\n    return {\n      component: iconSet.component,\n      icon: iconName\n    };\n  });\n  return {\n    iconData\n  };\n};\n//# sourceMappingURL=icons.mjs.map",
      "start": 1720957245405,
      "end": 1720957245566,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720957245566,
      "end": 1720957245566,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720957245567,
      "end": 1720957245567,
      "order": "normal"
    }
  ]
}
