{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VGrid/VCol.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { breakpoints } from \"../../composables/display.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = 'offset' + capitalize(val);\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = 'order' + capitalize(val);\n    props[orderKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n  if (val == null || val === false) {\n    return undefined;\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  if (type === 'col') {\n    className = 'v-' + className;\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase();\n  }\n  // .order-md-6\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'];\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String,\n    default: null,\n    validator: str => ALIGN_SELF_VALUES.includes(str)\n  },\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VCol');\nexport const VCol = genericComponent()({\n  name: 'VCol',\n  props: makeVColProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'));\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: [classes.value, props.class],\n      style: props.style\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VCol.mjs.map",
      "start": 1720957245362,
      "end": 1720957245515,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720957245515,
      "end": 1720957245515,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720957245516,
      "end": 1720957245516,
      "order": "normal"
    }
  ]
}
