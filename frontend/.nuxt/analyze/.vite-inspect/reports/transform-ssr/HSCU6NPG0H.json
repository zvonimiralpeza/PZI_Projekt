{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/login.vue?macro=true",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n  <div>\r\n    <v-container>\r\n      <v-row justify=\"center\">\r\n        <v-col cols=\"12\" sm=\"8\" md=\"6\">\r\n          <v-card>\r\n            <v-card-title class=\"text-h5 text-center\" style=\"color: #2b9300;\">Prijava</v-card-title>\r\n            <v-card-text>\r\n              <v-form @submit.prevent=\"submitForm\">\r\n                <v-text-field v-model=\"email\" label=\"Email\" required persistent></v-text-field>\r\n                <v-text-field v-model=\"lozinka\" label=\"Lozinka\" type=\"password\" required persistent autocomplete=\"current-password\"></v-text-field>\r\n\r\n                <v-btn type=\"submit\" color=\"green\">Prijavi se</v-btn>\r\n              </v-form>\r\n\r\n              <!-- Prikazivanje poruka o uspjehu ili pogrešci -->\r\n              <v-alert v-if=\"message && !isSuccessDialogOpen\" :type=\"alertType\" class=\"mt-4\">\r\n                {{ message }}\r\n              </v-alert>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n\r\n    <!-- Dijalog za uspješan login -->\r\n    <v-dialog v-model=\"isSuccessDialogOpen\" max-width=\"400px\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">Uspješno prijavljivanje</v-card-title>\r\n        <v-card-text>\r\n          <p>Uspješno ste se prijavili!</p>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn color=\"green\" text @click=\"closeSuccessDialog\">Zatvori</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapWritableState } from 'pinia';\r\nimport { useUsersStore } from '../stores/users.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      lozinka: '',\r\n      message: '', // Poruka za korisnika\r\n      alertType: '', // Tip poruke: 'success' ili 'error'\r\n      isSuccessDialogOpen: false, // Stanje dijaloga\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        // Provjeri da li su svi podaci uneseni\r\n        if (!this.email || !this.lozinka) {\r\n          this.message = 'Molimo unesite sve podatke.';\r\n          this.alertType = 'error';\r\n          return; // Prekini izvršavanje funkcije\r\n        }\r\n\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/login`, {\r\n          method: 'POST',\r\n          body: {\r\n            email: this.email,\r\n            password: this.lozinka\r\n          }\r\n        });\r\n\r\n        // Provjeri odgovor\r\n        console.log(response)\r\n        if (response.user) {\r\n          this.message = 'Uspješno ste prijavljeni!';\r\n          this.alertType = 'success';\r\n          this.user = response.user;\r\n\r\n          // Spremanje odgovora u localStorage\r\n          localStorage.setItem('user', JSON.stringify(response));\r\n\r\n          // Otvori dijalog za uspješnu prijavu\r\n          this.isSuccessDialogOpen = true;\r\n\r\n          // Otići na naslovnu stranicu nakon što se dijalog zatvori\r\n          setTimeout(() => {\r\n            this.$router.push('/');\r\n          }, 2000); // Kašnjenje od 2 sekunde prije nego što se preusmjeri na početnu stranicu\r\n        } else {\r\n          this.message = 'Neuspješna prijava. Provjerite vaše podatke.';\r\n          this.alertType = 'error';\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.message = 'Došlo je do greške prilikom prijave. Pokušajte ponovo.';\r\n        this.alertType = 'error';\r\n      }\r\n    },\r\n    closeSuccessDialog() {\r\n      this.isSuccessDialogOpen = false;\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapWritableState(useUsersStore, ['user'])\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Vaši stilovi */\r\n</style>\r\n",
      "start": 1726415490704,
      "end": 1726415491487,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726415491488,
      "end": 1726415491488,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\r\nimport { mapWritableState } from 'pinia';\r\nimport { useUsersStore } from '../stores/users.js';\r\n\r\nconst _sfc_main = {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      lozinka: '',\r\n      message: '', // Poruka za korisnika\r\n      alertType: '', // Tip poruke: 'success' ili 'error'\r\n      isSuccessDialogOpen: false, // Stanje dijaloga\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        // Provjeri da li su svi podaci uneseni\r\n        if (!this.email || !this.lozinka) {\r\n          this.message = 'Molimo unesite sve podatke.';\r\n          this.alertType = 'error';\r\n          return; // Prekini izvršavanje funkcije\r\n        }\r\n\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/login`, {\r\n          method: 'POST',\r\n          body: {\r\n            email: this.email,\r\n            password: this.lozinka\r\n          }\r\n        });\r\n\r\n        // Provjeri odgovor\r\n        console.log(response)\r\n        if (response.user) {\r\n          this.message = 'Uspješno ste prijavljeni!';\r\n          this.alertType = 'success';\r\n          this.user = response.user;\r\n\r\n          // Spremanje odgovora u localStorage\r\n          localStorage.setItem('user', JSON.stringify(response));\r\n\r\n          // Otvori dijalog za uspješnu prijavu\r\n          this.isSuccessDialogOpen = true;\r\n\r\n          // Otići na naslovnu stranicu nakon što se dijalog zatvori\r\n          setTimeout(() => {\r\n            this.$router.push('/');\r\n          }, 2000); // Kašnjenje od 2 sekunde prije nego što se preusmjeri na početnu stranicu\r\n        } else {\r\n          this.message = 'Neuspješna prijava. Provjerite vaše podatke.';\r\n          this.alertType = 'error';\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.message = 'Došlo je do greške prilikom prijave. Pokušajte ponovo.';\r\n        this.alertType = 'error';\r\n      }\r\n    },\r\n    closeSuccessDialog() {\r\n      this.isSuccessDialogOpen = false;\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapWritableState(useUsersStore, ['user'])\r\n  }\r\n};\r\n\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  const _component_v_container = _resolveComponent(\"v-container\")\n  const _component_v_row = _resolveComponent(\"v-row\")\n  const _component_v_col = _resolveComponent(\"v-col\")\n  const _component_v_card = _resolveComponent(\"v-card\")\n  const _component_v_card_title = _resolveComponent(\"v-card-title\")\n  const _component_v_card_text = _resolveComponent(\"v-card-text\")\n  const _component_v_form = _resolveComponent(\"v-form\")\n  const _component_v_text_field = _resolveComponent(\"v-text-field\")\n  const _component_v_btn = _resolveComponent(\"v-btn\")\n  const _component_v_alert = _resolveComponent(\"v-alert\")\n  const _component_v_dialog = _resolveComponent(\"v-dialog\")\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_v_container, null, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_v_row, { justify: \"center\" }, {\n          default: _withCtx((_, _push, _parent, _scopeId) => {\n            if (_push) {\n              _push(_ssrRenderComponent(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_v_card, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(_ssrRenderComponent(_component_v_card_title, {\n                            class: \"text-h5 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(`Prijava`)\n                              } else {\n                                return [\n                                  _createTextVNode(\"Prijava\")\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                          _push(_ssrRenderComponent(_component_v_card_text, null, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(_ssrRenderComponent(_component_v_form, { onSubmit: $options.submitForm }, {\n                                  default: _withCtx((_, _push, _parent, _scopeId) => {\n                                    if (_push) {\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.email,\n                                        \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                        label: \"Email\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.lozinka,\n                                        \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                        label: \"Lozinka\",\n                                        type: \"password\",\n                                        required: \"\",\n                                        persistent: \"\",\n                                        autocomplete: \"current-password\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx((_, _push, _parent, _scopeId) => {\n                                          if (_push) {\n                                            _push(`Prijavi se`)\n                                          } else {\n                                            return [\n                                              _createTextVNode(\"Prijavi se\")\n                                            ]\n                                          }\n                                        }),\n                                        _: 1\n                                      }, _parent, _scopeId))\n                                    } else {\n                                      return [\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.email,\n                                          \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                          label: \"Email\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.lozinka,\n                                          \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                          label: \"Lozinka\",\n                                          type: \"password\",\n                                          required: \"\",\n                                          persistent: \"\",\n                                          autocomplete: \"current-password\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_btn, {\n                                          type: \"submit\",\n                                          color: \"green\"\n                                        }, {\n                                          default: _withCtx(() => [\n                                            _createTextVNode(\"Prijavi se\")\n                                          ]),\n                                          _: 1\n                                        })\n                                      ]\n                                    }\n                                  }),\n                                  _: 1\n                                }, _parent, _scopeId))\n                                if ($data.message && !$data.isSuccessDialogOpen) {\n                                  _push(_ssrRenderComponent(_component_v_alert, {\n                                    type: $data.alertType,\n                                    class: \"mt-4\"\n                                  }, {\n                                    default: _withCtx((_, _push, _parent, _scopeId) => {\n                                      if (_push) {\n                                        _push(`${_ssrInterpolate($data.message)}`)\n                                      } else {\n                                        return [\n                                          _createTextVNode(_toDisplayString($data.message), 1)\n                                        ]\n                                      }\n                                    }),\n                                    _: 1\n                                  }, _parent, _scopeId))\n                                } else {\n                                  _push(`<!---->`)\n                                }\n                              } else {\n                                return [\n                                  _createVNode(_component_v_form, {\n                                    onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.email,\n                                        \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                        label: \"Email\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.lozinka,\n                                        \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                        label: \"Lozinka\",\n                                        type: \"password\",\n                                        required: \"\",\n                                        persistent: \"\",\n                                        autocomplete: \"current-password\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createTextVNode(\"Prijavi se\")\n                                        ]),\n                                        _: 1\n                                      })\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"onSubmit\"]),\n                                  ($data.message && !$data.isSuccessDialogOpen)\n                                    ? (_openBlock(), _createBlock(_component_v_alert, {\n                                        key: 0,\n                                        type: $data.alertType,\n                                        class: \"mt-4\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createTextVNode(_toDisplayString($data.message), 1)\n                                        ]),\n                                        _: 1\n                                      }, 8, [\"type\"]))\n                                    : _createCommentVNode(\"\", true)\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                        } else {\n                          return [\n                            _createVNode(_component_v_card_title, {\n                              class: \"text-h5 text-center\",\n                              style: {\"color\":\"#2b9300\"}\n                            }, {\n                              default: _withCtx(() => [\n                                _createTextVNode(\"Prijava\")\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_v_card_text, null, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_form, {\n                                  onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.email,\n                                      \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                      label: \"Email\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.lozinka,\n                                      \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                      label: \"Lozinka\",\n                                      type: \"password\",\n                                      required: \"\",\n                                      persistent: \"\",\n                                      autocomplete: \"current-password\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_btn, {\n                                      type: \"submit\",\n                                      color: \"green\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"Prijavi se\")\n                                      ]),\n                                      _: 1\n                                    })\n                                  ]),\n                                  _: 1\n                                }, 8, [\"onSubmit\"]),\n                                ($data.message && !$data.isSuccessDialogOpen)\n                                  ? (_openBlock(), _createBlock(_component_v_alert, {\n                                      key: 0,\n                                      type: $data.alertType,\n                                      class: \"mt-4\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString($data.message), 1)\n                                      ]),\n                                      _: 1\n                                    }, 8, [\"type\"]))\n                                  : _createCommentVNode(\"\", true)\n                              ]),\n                              _: 1\n                            })\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_v_card, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_card_title, {\n                            class: \"text-h5 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"Prijava\")\n                            ]),\n                            _: 1\n                          }),\n                          _createVNode(_component_v_card_text, null, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_form, {\n                                onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.email,\n                                    \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                    label: \"Email\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.lozinka,\n                                    \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                    label: \"Lozinka\",\n                                    type: \"password\",\n                                    required: \"\",\n                                    persistent: \"\",\n                                    autocomplete: \"current-password\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_btn, {\n                                    type: \"submit\",\n                                    color: \"green\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(\"Prijavi se\")\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              }, 8, [\"onSubmit\"]),\n                              ($data.message && !$data.isSuccessDialogOpen)\n                                ? (_openBlock(), _createBlock(_component_v_alert, {\n                                    key: 0,\n                                    type: $data.alertType,\n                                    class: \"mt-4\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString($data.message), 1)\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"type\"]))\n                                : _createCommentVNode(\"\", true)\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n            } else {\n              return [\n                _createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"8\",\n                  md: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_v_card, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_v_card_title, {\n                          class: \"text-h5 text-center\",\n                          style: {\"color\":\"#2b9300\"}\n                        }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Prijava\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_v_card_text, null, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_v_form, {\n                              onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.email,\n                                  \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                  label: \"Email\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.lozinka,\n                                  \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                  label: \"Lozinka\",\n                                  type: \"password\",\n                                  required: \"\",\n                                  persistent: \"\",\n                                  autocomplete: \"current-password\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_btn, {\n                                  type: \"submit\",\n                                  color: \"green\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(\"Prijavi se\")\n                                  ]),\n                                  _: 1\n                                })\n                              ]),\n                              _: 1\n                            }, 8, [\"onSubmit\"]),\n                            ($data.message && !$data.isSuccessDialogOpen)\n                              ? (_openBlock(), _createBlock(_component_v_alert, {\n                                  key: 0,\n                                  type: $data.alertType,\n                                  class: \"mt-4\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(_toDisplayString($data.message), 1)\n                                  ]),\n                                  _: 1\n                                }, 8, [\"type\"]))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]\n            }\n          }),\n          _: 1\n        }, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_v_row, { justify: \"center\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_card_title, {\n                        class: \"text-h5 text-center\",\n                        style: {\"color\":\"#2b9300\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Prijava\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_form, {\n                            onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.email,\n                                \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                label: \"Email\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.lozinka,\n                                \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                label: \"Lozinka\",\n                                type: \"password\",\n                                required: \"\",\n                                persistent: \"\",\n                                autocomplete: \"current-password\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_btn, {\n                                type: \"submit\",\n                                color: \"green\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(\"Prijavi se\")\n                                ]),\n                                _: 1\n                              })\n                            ]),\n                            _: 1\n                          }, 8, [\"onSubmit\"]),\n                          ($data.message && !$data.isSuccessDialogOpen)\n                            ? (_openBlock(), _createBlock(_component_v_alert, {\n                                key: 0,\n                                type: $data.alertType,\n                                class: \"mt-4\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString($data.message), 1)\n                                ]),\n                                _: 1\n                              }, 8, [\"type\"]))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_v_dialog, {\n    modelValue: $data.isSuccessDialogOpen,\n    \"onUpdate:modelValue\": $event => (($data.isSuccessDialogOpen) = $event),\n    \"max-width\": \"400px\"\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_v_card, null, {\n          default: _withCtx((_, _push, _parent, _scopeId) => {\n            if (_push) {\n              _push(_ssrRenderComponent(_component_v_card_title, { class: \"headline\" }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Uspješno prijavljivanje`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Uspješno prijavljivanje\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_v_card_text, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`<p${_scopeId}>Uspješno ste se prijavili!</p>`)\n                  } else {\n                    return [\n                      _createVNode(\"p\", null, \"Uspješno ste se prijavili!\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_v_card_actions, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_v_btn, {\n                      color: \"green\",\n                      text: \"\",\n                      onClick: $options.closeSuccessDialog\n                    }, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`Zatvori`)\n                        } else {\n                          return [\n                            _createTextVNode(\"Zatvori\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_v_btn, {\n                        color: \"green\",\n                        text: \"\",\n                        onClick: $options.closeSuccessDialog\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Zatvori\")\n                        ]),\n                        _: 1\n                      }, 8, [\"onClick\"])\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n            } else {\n              return [\n                _createVNode(_component_v_card_title, { class: \"headline\" }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Uspješno prijavljivanje\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_v_card_text, null, {\n                  default: _withCtx(() => [\n                    _createVNode(\"p\", null, \"Uspješno ste se prijavili!\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_v_card_actions, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_v_btn, {\n                      color: \"green\",\n                      text: \"\",\n                      onClick: $options.closeSuccessDialog\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Zatvori\")\n                      ]),\n                      _: 1\n                    }, 8, [\"onClick\"])\n                  ]),\n                  _: 1\n                })\n              ]\n            }\n          }),\n          _: 1\n        }, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_v_card, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_card_title, { class: \"headline\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Uspješno prijavljivanje\")\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [\n                  _createVNode(\"p\", null, \"Uspješno ste se prijavili!\")\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_v_card_actions, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_v_btn, {\n                    color: \"green\",\n                    text: \"\",\n                    onClick: $options.closeSuccessDialog\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Zatvori\")\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n\nimport \"C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/login.vue?vue&type=style&index=0&lang.css\"\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/login.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1726415491488,
      "end": 1726415491508,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/login.vue",
        "names": [],
        "sources": [
          "C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/login.vue"
        ],
        "sourcesContent": [
          "<template>\r\n  <div>\r\n    <v-container>\r\n      <v-row justify=\"center\">\r\n        <v-col cols=\"12\" sm=\"8\" md=\"6\">\r\n          <v-card>\r\n            <v-card-title class=\"text-h5 text-center\" style=\"color: #2b9300;\">Prijava</v-card-title>\r\n            <v-card-text>\r\n              <v-form @submit.prevent=\"submitForm\">\r\n                <v-text-field v-model=\"email\" label=\"Email\" required persistent></v-text-field>\r\n                <v-text-field v-model=\"lozinka\" label=\"Lozinka\" type=\"password\" required persistent autocomplete=\"current-password\"></v-text-field>\r\n\r\n                <v-btn type=\"submit\" color=\"green\">Prijavi se</v-btn>\r\n              </v-form>\r\n\r\n              <!-- Prikazivanje poruka o uspjehu ili pogrešci -->\r\n              <v-alert v-if=\"message && !isSuccessDialogOpen\" :type=\"alertType\" class=\"mt-4\">\r\n                {{ message }}\r\n              </v-alert>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n\r\n    <!-- Dijalog za uspješan login -->\r\n    <v-dialog v-model=\"isSuccessDialogOpen\" max-width=\"400px\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">Uspješno prijavljivanje</v-card-title>\r\n        <v-card-text>\r\n          <p>Uspješno ste se prijavili!</p>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn color=\"green\" text @click=\"closeSuccessDialog\">Zatvori</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapWritableState } from 'pinia';\r\nimport { useUsersStore } from '../stores/users.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      lozinka: '',\r\n      message: '', // Poruka za korisnika\r\n      alertType: '', // Tip poruke: 'success' ili 'error'\r\n      isSuccessDialogOpen: false, // Stanje dijaloga\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        // Provjeri da li su svi podaci uneseni\r\n        if (!this.email || !this.lozinka) {\r\n          this.message = 'Molimo unesite sve podatke.';\r\n          this.alertType = 'error';\r\n          return; // Prekini izvršavanje funkcije\r\n        }\r\n\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/login`, {\r\n          method: 'POST',\r\n          body: {\r\n            email: this.email,\r\n            password: this.lozinka\r\n          }\r\n        });\r\n\r\n        // Provjeri odgovor\r\n        console.log(response)\r\n        if (response.user) {\r\n          this.message = 'Uspješno ste prijavljeni!';\r\n          this.alertType = 'success';\r\n          this.user = response.user;\r\n\r\n          // Spremanje odgovora u localStorage\r\n          localStorage.setItem('user', JSON.stringify(response));\r\n\r\n          // Otvori dijalog za uspješnu prijavu\r\n          this.isSuccessDialogOpen = true;\r\n\r\n          // Otići na naslovnu stranicu nakon što se dijalog zatvori\r\n          setTimeout(() => {\r\n            this.$router.push('/');\r\n          }, 2000); // Kašnjenje od 2 sekunde prije nego što se preusmjeri na početnu stranicu\r\n        } else {\r\n          this.message = 'Neuspješna prijava. Provjerite vaše podatke.';\r\n          this.alertType = 'error';\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.message = 'Došlo je do greške prilikom prijave. Pokušajte ponovo.';\r\n        this.alertType = 'error';\r\n      }\r\n    },\r\n    closeSuccessDialog() {\r\n      this.isSuccessDialogOpen = false;\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapWritableState(useUsersStore, ['user'])\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Vaši stilovi */\r\n</style>\r\n"
        ],
        "mappings": "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AAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,EAAE,CAAC,CAAC,CAAC,EAAE;UACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B;MACF,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC;EACF,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;sBAxGG,CAqBc;;sDApBL,OAAO,EAAC,QAAQ;4BAAvB,CAmBQ;;;gBAlBC,IAAI,EAAC,IAAI;gBAAC,EAAE,EAAC,GAAG;gBAAC,EAAE,EAAC,GAAG;;kCAA9B,CAiBQ;;;wCAhBN,CAeS;;;4BAdO,KAAK,EAAC,qBAAqB;4BAAC,KAAuB,EAAvB,mBAAuB;;8CAAjE,CAAwF;;;;;mDAAtB,SAAO;;;;;;;8CACzE,CAYc;;+EAXH,QAAM,EAAU,mBAAU;oDAAnC,CAKS;;;oDAJgB,WAAK;2EAAL,WAAK;wCAAE,KAAK,EAAC,OAAO;wCAAC,QAAQ,EAAR,EAAQ;wCAAC,UAAU,EAAV,EAAU;;;oDACxC,aAAO;2EAAP,aAAO;wCAAE,KAAK,EAAC,SAAS;wCAAC,IAAI,EAAC,UAAU;wCAAC,QAAQ,EAAR,EAAQ;wCAAC,UAAU,EAAV,EAAU;wCAAC,YAAY,EAAC,kBAAkB;;;wCAE5G,IAAI,EAAC,QAAQ;wCAAC,KAAK,EAAC,OAAO;;0DAAlC,CAAqD;;;;;+DAAlB,YAAU;;;;;;;;wCAH7C,aAA+E;sDAAxD,WAAK;6EAAL,WAAK;0CAAE,KAAK,EAAC,OAAO;0CAAC,QAAQ,EAAR,EAAQ;0CAAC,UAAU,EAAV,EAAU;;wCAC/D,aAAmI;sDAA5G,aAAO;6EAAP,aAAO;0CAAE,KAAK,EAAC,SAAS;0CAAC,IAAI,EAAC,UAAU;0CAAC,QAAQ,EAAR,EAAQ;0CAAC,UAAU,EAAV,EAAU;0CAAC,YAAY,EAAC,kBAAkB;;wCAEnH,aAAqD;0CAA9C,IAAI,EAAC,QAAQ;0CAAC,KAAK,EAAC,OAAO;;4DAAC,CAAU;6DAAV,YAAU;;;;;;;;;oCAIhC,aAAO,KAAK,yBAAmB;;oCAAG,IAAI,EAAE,eAAS;oCAAE,KAAK,EAAC,MAAM;;sDAA9E,CAEU;;iEADL,aAAO;;;4EAAP,aAAO;;;;;;;;;;;kCATZ,aAKS;oCALA,QAAM,iBAAU,mBAAU;;sDACjC,CAA+E;sCAA/E,aAA+E;oDAAxD,WAAK;2EAAL,WAAK;wCAAE,KAAK,EAAC,OAAO;wCAAC,QAAQ,EAAR,EAAQ;wCAAC,UAAU,EAAV,EAAU;;sCAC/D,aAAmI;oDAA5G,aAAO;2EAAP,aAAO;wCAAE,KAAK,EAAC,SAAS;wCAAC,IAAI,EAAC,UAAU;wCAAC,QAAQ,EAAR,EAAQ;wCAAC,UAAU,EAAV,EAAU;wCAAC,YAAY,EAAC,kBAAkB;;sCAEnH,aAAqD;wCAA9C,IAAI,EAAC,QAAQ;wCAAC,KAAK,EAAC,OAAO;;0DAAC,CAAU;2DAAV,YAAU;;;;;;;mCAIhC,aAAO,KAAK,yBAAmB;qDAA9C,aAEU;;wCAFuC,IAAI,EAAE,eAAS;wCAAE,KAAK,EAAC,MAAM;;0DAC5E,CAAa;4EAAV,aAAO;;;;;;;;;;;;4BAXd,aAAwF;8BAA1E,KAAK,EAAC,qBAAqB;8BAAC,KAAuB,EAAvB,mBAAuB;;gDAAC,CAAO;iDAAP,SAAO;;;;4BACzE,aAYc;gDAXZ,CAKS;gCALT,aAKS;kCALA,QAAM,iBAAU,mBAAU;;oDACjC,CAA+E;oCAA/E,aAA+E;kDAAxD,WAAK;yEAAL,WAAK;sCAAE,KAAK,EAAC,OAAO;sCAAC,QAAQ,EAAR,EAAQ;sCAAC,UAAU,EAAV,EAAU;;oCAC/D,aAAmI;kDAA5G,aAAO;yEAAP,aAAO;sCAAE,KAAK,EAAC,SAAS;sCAAC,IAAI,EAAC,UAAU;sCAAC,QAAQ,EAAR,EAAQ;sCAAC,UAAU,EAAV,EAAU;sCAAC,YAAY,EAAC,kBAAkB;;oCAEnH,aAAqD;sCAA9C,IAAI,EAAC,QAAQ;sCAAC,KAAK,EAAC,OAAO;;wDAAC,CAAU;yDAAV,YAAU;;;;;;;iCAIhC,aAAO,KAAK,yBAAmB;mDAA9C,aAEU;;sCAFuC,IAAI,EAAE,eAAS;sCAAE,KAAK,EAAC,MAAM;;wDAC5E,CAAa;0EAAV,aAAO;;;;;;;;;;;;;;;sBAZhB,aAeS;0CAdP,CAAwF;0BAAxF,aAAwF;4BAA1E,KAAK,EAAC,qBAAqB;4BAAC,KAAuB,EAAvB,mBAAuB;;8CAAC,CAAO;+CAAP,SAAO;;;;0BACzE,aAYc;8CAXZ,CAKS;8BALT,aAKS;gCALA,QAAM,iBAAU,mBAAU;;kDACjC,CAA+E;kCAA/E,aAA+E;gDAAxD,WAAK;uEAAL,WAAK;oCAAE,KAAK,EAAC,OAAO;oCAAC,QAAQ,EAAR,EAAQ;oCAAC,UAAU,EAAV,EAAU;;kCAC/D,aAAmI;gDAA5G,aAAO;uEAAP,aAAO;oCAAE,KAAK,EAAC,SAAS;oCAAC,IAAI,EAAC,UAAU;oCAAC,QAAQ,EAAR,EAAQ;oCAAC,UAAU,EAAV,EAAU;oCAAC,YAAY,EAAC,kBAAkB;;kCAEnH,aAAqD;oCAA9C,IAAI,EAAC,QAAQ;oCAAC,KAAK,EAAC,OAAO;;sDAAC,CAAU;uDAAV,YAAU;;;;;;;+BAIhC,aAAO,KAAK,yBAAmB;iDAA9C,aAEU;;oCAFuC,IAAI,EAAE,eAAS;oCAAE,KAAK,EAAC,MAAM;;sDAC5E,CAAa;wEAAV,aAAO;;;;;;;;;;;;;;;;;;gBAblB,aAiBQ;kBAjBD,IAAI,EAAC,IAAI;kBAAC,EAAE,EAAC,GAAG;kBAAC,EAAE,EAAC,GAAG;;oCAC5B,CAeS;oBAfT,aAeS;wCAdP,CAAwF;wBAAxF,aAAwF;0BAA1E,KAAK,EAAC,qBAAqB;0BAAC,KAAuB,EAAvB,mBAAuB;;4CAAC,CAAO;6CAAP,SAAO;;;;wBACzE,aAYc;4CAXZ,CAKS;4BALT,aAKS;8BALA,QAAM,iBAAU,mBAAU;;gDACjC,CAA+E;gCAA/E,aAA+E;8CAAxD,WAAK;qEAAL,WAAK;kCAAE,KAAK,EAAC,OAAO;kCAAC,QAAQ,EAAR,EAAQ;kCAAC,UAAU,EAAV,EAAU;;gCAC/D,aAAmI;8CAA5G,aAAO;qEAAP,aAAO;kCAAE,KAAK,EAAC,SAAS;kCAAC,IAAI,EAAC,UAAU;kCAAC,QAAQ,EAAR,EAAQ;kCAAC,UAAU,EAAV,EAAU;kCAAC,YAAY,EAAC,kBAAkB;;gCAEnH,aAAqD;kCAA9C,IAAI,EAAC,QAAQ;kCAAC,KAAK,EAAC,OAAO;;oDAAC,CAAU;qDAAV,YAAU;;;;;;;6BAIhC,aAAO,KAAK,yBAAmB;+CAA9C,aAEU;;kCAFuC,IAAI,EAAE,eAAS;kCAAE,KAAK,EAAC,MAAM;;oDAC5E,CAAa;sEAAV,aAAO;;;;;;;;;;;;;;;;;;;;;UAdpB,aAmBQ,oBAnBD,OAAO,EAAC,QAAQ;8BACrB,CAiBQ;cAjBR,aAiBQ;gBAjBD,IAAI,EAAC,IAAI;gBAAC,EAAE,EAAC,GAAG;gBAAC,EAAE,EAAC,GAAG;;kCAC5B,CAeS;kBAfT,aAeS;sCAdP,CAAwF;sBAAxF,aAAwF;wBAA1E,KAAK,EAAC,qBAAqB;wBAAC,KAAuB,EAAvB,mBAAuB;;0CAAC,CAAO;2CAAP,SAAO;;;;sBACzE,aAYc;0CAXZ,CAKS;0BALT,aAKS;4BALA,QAAM,iBAAU,mBAAU;;8CACjC,CAA+E;8BAA/E,aAA+E;4CAAxD,WAAK;mEAAL,WAAK;gCAAE,KAAK,EAAC,OAAO;gCAAC,QAAQ,EAAR,EAAQ;gCAAC,UAAU,EAAV,EAAU;;8BAC/D,aAAmI;4CAA5G,aAAO;mEAAP,aAAO;gCAAE,KAAK,EAAC,SAAS;gCAAC,IAAI,EAAC,UAAU;gCAAC,QAAQ,EAAR,EAAQ;gCAAC,UAAU,EAAV,EAAU;gCAAC,YAAY,EAAC,kBAAkB;;8BAEnH,aAAqD;gCAA9C,IAAI,EAAC,QAAQ;gCAAC,KAAK,EAAC,OAAO;;kDAAC,CAAU;mDAAV,YAAU;;;;;;;2BAIhC,aAAO,KAAK,yBAAmB;6CAA9C,aAEU;;gCAFuC,IAAI,EAAE,eAAS;gCAAE,KAAK,EAAC,MAAM;;kDAC5E,CAAa;oEAAV,aAAO;;;;;;;;;;;;;;;;;;;;;;;gBASH,yBAAmB;uCAAnB,yBAAmB;IAAE,WAAS,EAAC,OAAO;;sBAAzD,CAUW;;;4BATT,CAQS;;mEAPO,KAAK,EAAC,UAAU;kCAA9B,CAAqE;;;;;uCAAtC,yBAAuB;;;;;;;kCACtD,CAEc;;;;;sBADZ,aAAiC,WAA9B,4BAA0B;;;;;;;kCAE/B,CAEiB;;;sBADR,KAAK,EAAC,OAAO;sBAAC,IAAI,EAAJ,EAAI;sBAAE,OAAK,EAAE,2BAAkB;;wCAApD,CAAqE;;;;;6CAAf,SAAO;;;;;;;;sBAA7D,aAAqE;wBAA9D,KAAK,EAAC,OAAO;wBAAC,IAAI,EAAJ,EAAI;wBAAE,OAAK,EAAE,2BAAkB;;0CAAE,CAAO;2CAAP,SAAO;;;;;;;;;;;gBAL/D,aAAqE,2BAAvD,KAAK,EAAC,UAAU;oCAAC,CAAuB;qCAAvB,yBAAuB;;;;gBACtD,aAEc;oCADZ,CAAiC;oBAAjC,aAAiC,WAA9B,4BAA0B;;;;gBAE/B,aAEiB;oCADf,CAAqE;oBAArE,aAAqE;sBAA9D,KAAK,EAAC,OAAO;sBAAC,IAAI,EAAJ,EAAI;sBAAE,OAAK,EAAE,2BAAkB;;wCAAE,CAAO;yCAAP,SAAO;;;;;;;;;;;;;;UANjE,aAQS;8BAPP,CAAqE;cAArE,aAAqE,2BAAvD,KAAK,EAAC,UAAU;kCAAC,CAAuB;mCAAvB,yBAAuB;;;;cACtD,aAEc;kCADZ,CAAiC;kBAAjC,aAAiC,WAA9B,4BAA0B;;;;cAE/B,aAEiB;kCADf,CAAqE;kBAArE,aAAqE;oBAA9D,KAAK,EAAC,OAAO;oBAAC,IAAI,EAAJ,EAAI;oBAAE,OAAK,EAAE,2BAAkB;;sCAAE,CAAO;uCAAP,SAAO"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726415491508,
      "end": 1726415491508,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415491508,
      "end": 1726415491508,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415491508,
      "end": 1726415491508,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726415491508,
      "end": 1726415491508,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726415491508,
      "end": 1726415491508,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415491508,
      "end": 1726415491509,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "result": "\r\nimport { mapWritableState } from 'pinia';\r\nimport { useUsersStore } from '../stores/users.js';\r\n\r\nconst _sfc_main = {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      lozinka: '',\r\n      message: '', // Poruka za korisnika\r\n      alertType: '', // Tip poruke: 'success' ili 'error'\r\n      isSuccessDialogOpen: false, // Stanje dijaloga\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        // Provjeri da li su svi podaci uneseni\r\n        if (!this.email || !this.lozinka) {\r\n          this.message = 'Molimo unesite sve podatke.';\r\n          this.alertType = 'error';\r\n          return; // Prekini izvršavanje funkcije\r\n        }\r\n\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/login`, {\r\n          method: 'POST',\r\n          body: {\r\n            email: this.email,\r\n            password: this.lozinka\r\n          }\r\n        });\r\n\r\n        // Provjeri odgovor\r\n        console.log(response)\r\n        if (response.user) {\r\n          this.message = 'Uspješno ste prijavljeni!';\r\n          this.alertType = 'success';\r\n          this.user = response.user;\r\n\r\n          // Spremanje odgovora u localStorage\r\n          localStorage.setItem('user', JSON.stringify(response));\r\n\r\n          // Otvori dijalog za uspješnu prijavu\r\n          this.isSuccessDialogOpen = true;\r\n\r\n          // Otići na naslovnu stranicu nakon što se dijalog zatvori\r\n          setTimeout(() => {\r\n            this.$router.push('/');\r\n          }, 2000); // Kašnjenje od 2 sekunde prije nego što se preusmjeri na početnu stranicu\r\n        } else {\r\n          this.message = 'Neuspješna prijava. Provjerite vaše podatke.';\r\n          this.alertType = 'error';\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.message = 'Došlo je do greške prilikom prijave. Pokušajte ponovo.';\r\n        this.alertType = 'error';\r\n      }\r\n    },\r\n    closeSuccessDialog() {\r\n      this.isSuccessDialogOpen = false;\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapWritableState(useUsersStore, ['user'])\r\n  }\r\n};\r\n\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n                                                                 \n                                                     \n                                                     \n                                                       \n                                                                   \n                                                                 \n                                                       \n                                                                   \n                                                     \n                                                         \n                                                           \n                                                                       \n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_v_container, null, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_v_row, { justify: \"center\" }, {\n          default: _withCtx((_, _push, _parent, _scopeId) => {\n            if (_push) {\n              _push(_ssrRenderComponent(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_v_card, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(_ssrRenderComponent(_component_v_card_title, {\n                            class: \"text-h5 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(`Prijava`)\n                              } else {\n                                return [\n                                  _createTextVNode(\"Prijava\")\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                          _push(_ssrRenderComponent(_component_v_card_text, null, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(_ssrRenderComponent(_component_v_form, { onSubmit: $options.submitForm }, {\n                                  default: _withCtx((_, _push, _parent, _scopeId) => {\n                                    if (_push) {\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.email,\n                                        \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                        label: \"Email\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.lozinka,\n                                        \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                        label: \"Lozinka\",\n                                        type: \"password\",\n                                        required: \"\",\n                                        persistent: \"\",\n                                        autocomplete: \"current-password\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx((_, _push, _parent, _scopeId) => {\n                                          if (_push) {\n                                            _push(`Prijavi se`)\n                                          } else {\n                                            return [\n                                              _createTextVNode(\"Prijavi se\")\n                                            ]\n                                          }\n                                        }),\n                                        _: 1\n                                      }, _parent, _scopeId))\n                                    } else {\n                                      return [\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.email,\n                                          \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                          label: \"Email\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.lozinka,\n                                          \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                          label: \"Lozinka\",\n                                          type: \"password\",\n                                          required: \"\",\n                                          persistent: \"\",\n                                          autocomplete: \"current-password\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_btn, {\n                                          type: \"submit\",\n                                          color: \"green\"\n                                        }, {\n                                          default: _withCtx(() => [\n                                            _createTextVNode(\"Prijavi se\")\n                                          ]),\n                                          _: 1\n                                        })\n                                      ]\n                                    }\n                                  }),\n                                  _: 1\n                                }, _parent, _scopeId))\n                                if ($data.message && !$data.isSuccessDialogOpen) {\n                                  _push(_ssrRenderComponent(_component_v_alert, {\n                                    type: $data.alertType,\n                                    class: \"mt-4\"\n                                  }, {\n                                    default: _withCtx((_, _push, _parent, _scopeId) => {\n                                      if (_push) {\n                                        _push(`${_ssrInterpolate($data.message)}`)\n                                      } else {\n                                        return [\n                                          _createTextVNode(_toDisplayString($data.message), 1)\n                                        ]\n                                      }\n                                    }),\n                                    _: 1\n                                  }, _parent, _scopeId))\n                                } else {\n                                  _push(`<!---->`)\n                                }\n                              } else {\n                                return [\n                                  _createVNode(_component_v_form, {\n                                    onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.email,\n                                        \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                        label: \"Email\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.lozinka,\n                                        \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                        label: \"Lozinka\",\n                                        type: \"password\",\n                                        required: \"\",\n                                        persistent: \"\",\n                                        autocomplete: \"current-password\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createTextVNode(\"Prijavi se\")\n                                        ]),\n                                        _: 1\n                                      })\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"onSubmit\"]),\n                                  ($data.message && !$data.isSuccessDialogOpen)\n                                    ? (_openBlock(), _createBlock(_component_v_alert, {\n                                        key: 0,\n                                        type: $data.alertType,\n                                        class: \"mt-4\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createTextVNode(_toDisplayString($data.message), 1)\n                                        ]),\n                                        _: 1\n                                      }, 8, [\"type\"]))\n                                    : _createCommentVNode(\"\", true)\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                        } else {\n                          return [\n                            _createVNode(_component_v_card_title, {\n                              class: \"text-h5 text-center\",\n                              style: {\"color\":\"#2b9300\"}\n                            }, {\n                              default: _withCtx(() => [\n                                _createTextVNode(\"Prijava\")\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_v_card_text, null, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_form, {\n                                  onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.email,\n                                      \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                      label: \"Email\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.lozinka,\n                                      \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                      label: \"Lozinka\",\n                                      type: \"password\",\n                                      required: \"\",\n                                      persistent: \"\",\n                                      autocomplete: \"current-password\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_btn, {\n                                      type: \"submit\",\n                                      color: \"green\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"Prijavi se\")\n                                      ]),\n                                      _: 1\n                                    })\n                                  ]),\n                                  _: 1\n                                }, 8, [\"onSubmit\"]),\n                                ($data.message && !$data.isSuccessDialogOpen)\n                                  ? (_openBlock(), _createBlock(_component_v_alert, {\n                                      key: 0,\n                                      type: $data.alertType,\n                                      class: \"mt-4\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString($data.message), 1)\n                                      ]),\n                                      _: 1\n                                    }, 8, [\"type\"]))\n                                  : _createCommentVNode(\"\", true)\n                              ]),\n                              _: 1\n                            })\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_v_card, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_card_title, {\n                            class: \"text-h5 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"Prijava\")\n                            ]),\n                            _: 1\n                          }),\n                          _createVNode(_component_v_card_text, null, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_form, {\n                                onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.email,\n                                    \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                    label: \"Email\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.lozinka,\n                                    \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                    label: \"Lozinka\",\n                                    type: \"password\",\n                                    required: \"\",\n                                    persistent: \"\",\n                                    autocomplete: \"current-password\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_btn, {\n                                    type: \"submit\",\n                                    color: \"green\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(\"Prijavi se\")\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              }, 8, [\"onSubmit\"]),\n                              ($data.message && !$data.isSuccessDialogOpen)\n                                ? (_openBlock(), _createBlock(_component_v_alert, {\n                                    key: 0,\n                                    type: $data.alertType,\n                                    class: \"mt-4\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString($data.message), 1)\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"type\"]))\n                                : _createCommentVNode(\"\", true)\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n            } else {\n              return [\n                _createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"8\",\n                  md: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_v_card, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_v_card_title, {\n                          class: \"text-h5 text-center\",\n                          style: {\"color\":\"#2b9300\"}\n                        }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Prijava\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_v_card_text, null, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_v_form, {\n                              onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.email,\n                                  \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                  label: \"Email\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.lozinka,\n                                  \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                  label: \"Lozinka\",\n                                  type: \"password\",\n                                  required: \"\",\n                                  persistent: \"\",\n                                  autocomplete: \"current-password\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_btn, {\n                                  type: \"submit\",\n                                  color: \"green\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(\"Prijavi se\")\n                                  ]),\n                                  _: 1\n                                })\n                              ]),\n                              _: 1\n                            }, 8, [\"onSubmit\"]),\n                            ($data.message && !$data.isSuccessDialogOpen)\n                              ? (_openBlock(), _createBlock(_component_v_alert, {\n                                  key: 0,\n                                  type: $data.alertType,\n                                  class: \"mt-4\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(_toDisplayString($data.message), 1)\n                                  ]),\n                                  _: 1\n                                }, 8, [\"type\"]))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]\n            }\n          }),\n          _: 1\n        }, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_v_row, { justify: \"center\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_card_title, {\n                        class: \"text-h5 text-center\",\n                        style: {\"color\":\"#2b9300\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Prijava\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_form, {\n                            onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.email,\n                                \"onUpdate:modelValue\": $event => (($data.email) = $event),\n                                label: \"Email\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.lozinka,\n                                \"onUpdate:modelValue\": $event => (($data.lozinka) = $event),\n                                label: \"Lozinka\",\n                                type: \"password\",\n                                required: \"\",\n                                persistent: \"\",\n                                autocomplete: \"current-password\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_btn, {\n                                type: \"submit\",\n                                color: \"green\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(\"Prijavi se\")\n                                ]),\n                                _: 1\n                              })\n                            ]),\n                            _: 1\n                          }, 8, [\"onSubmit\"]),\n                          ($data.message && !$data.isSuccessDialogOpen)\n                            ? (_openBlock(), _createBlock(_component_v_alert, {\n                                key: 0,\n                                type: $data.alertType,\n                                class: \"mt-4\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString($data.message), 1)\n                                ]),\n                                _: 1\n                              }, 8, [\"type\"]))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_v_dialog, {\n    modelValue: $data.isSuccessDialogOpen,\n    \"onUpdate:modelValue\": $event => (($data.isSuccessDialogOpen) = $event),\n    \"max-width\": \"400px\"\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_v_card, null, {\n          default: _withCtx((_, _push, _parent, _scopeId) => {\n            if (_push) {\n              _push(_ssrRenderComponent(_component_v_card_title, { class: \"headline\" }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Uspješno prijavljivanje`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Uspješno prijavljivanje\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_v_card_text, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`<p${_scopeId}>Uspješno ste se prijavili!</p>`)\n                  } else {\n                    return [\n                      _createVNode(\"p\", null, \"Uspješno ste se prijavili!\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_v_card_actions, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_v_btn, {\n                      color: \"green\",\n                      text: \"\",\n                      onClick: $options.closeSuccessDialog\n                    }, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`Zatvori`)\n                        } else {\n                          return [\n                            _createTextVNode(\"Zatvori\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_v_btn, {\n                        color: \"green\",\n                        text: \"\",\n                        onClick: $options.closeSuccessDialog\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Zatvori\")\n                        ]),\n                        _: 1\n                      }, 8, [\"onClick\"])\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n            } else {\n              return [\n                _createVNode(_component_v_card_title, { class: \"headline\" }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Uspješno prijavljivanje\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_v_card_text, null, {\n                  default: _withCtx(() => [\n                    _createVNode(\"p\", null, \"Uspješno ste se prijavili!\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_v_card_actions, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_v_btn, {\n                      color: \"green\",\n                      text: \"\",\n                      onClick: $options.closeSuccessDialog\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Zatvori\")\n                      ]),\n                      _: 1\n                    }, 8, [\"onClick\"])\n                  ]),\n                  _: 1\n                })\n              ]\n            }\n          }),\n          _: 1\n        }, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_v_card, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_card_title, { class: \"headline\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Uspješno prijavljivanje\")\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [\n                  _createVNode(\"p\", null, \"Uspješno ste se prijavili!\")\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_v_card_actions, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_v_btn, {\n                    color: \"green\",\n                    text: \"\",\n                    onClick: $options.closeSuccessDialog\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Zatvori\")\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n\nimport \"C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/login.vue?vue&type=style&index=0&lang.css\"\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/login.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])\n\n/* Vuetify */\nimport { VAlert as _component_v_alert } from \"vuetify/lib/components/VAlert/index.mjs\"\nimport { VBtn as _component_v_btn } from \"vuetify/lib/components/VBtn/index.mjs\"\nimport { VCard as _component_v_card, VCardTitle as _component_v_card_title, VCardText as _component_v_card_text, VCardActions as _component_v_card_actions } from \"vuetify/lib/components/VCard/index.mjs\"\nimport { VDialog as _component_v_dialog } from \"vuetify/lib/components/VDialog/index.mjs\"\nimport { VForm as _component_v_form } from \"vuetify/lib/components/VForm/index.mjs\"\nimport { VContainer as _component_v_container, VRow as _component_v_row, VCol as _component_v_col } from \"vuetify/lib/components/VGrid/index.mjs\"\nimport { VTextField as _component_v_text_field } from \"vuetify/lib/components/VTextField/index.mjs\"\n\n",
      "start": 1726415491509,
      "end": 1726415491509,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726415491509,
      "end": 1726415491509,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726415491509,
      "end": 1726415491509,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726415491509,
      "end": 1726415491509,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726415491509,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726415491510,
      "end": 1726415491510,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726415491510,
      "end": 1726415491521,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726415491510,
      "end": 1726415491521,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726415491522,
      "end": 1726415491522,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726415491522,
      "end": 1726415491522,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1726415491522,
      "end": 1726415491523,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA;AAAA;AAAA;AAAA"
      }
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1726415491522,
      "end": 1726415491523,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA;AAAA;AAAA;AAAA"
      }
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1726415491523,
      "end": 1726415491523,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726415491523,
      "end": 1726415491523,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726415491523,
      "end": 1726415491523,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726415491523,
      "end": 1726415491523,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726415491523,
      "end": 1726415491523,
      "order": "normal"
    }
  ]
}
