{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/composables/form.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Composables\nimport { useProxiedModel } from \"./proxiedModel.mjs\"; // Utilities\nimport { computed, inject, provide, ref, shallowRef, toRef, watch } from 'vue';\nimport { consoleWarn, propsFactory } from \"../util/index.mjs\"; // Types\nexport const FormKey = Symbol.for('vuetify:form');\nexport const makeFormProps = propsFactory({\n  disabled: Boolean,\n  fastFail: Boolean,\n  readonly: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  validateOn: {\n    type: String,\n    default: 'input'\n  }\n}, 'form');\nexport function createForm(props) {\n  const model = useProxiedModel(props, 'modelValue');\n  const isDisabled = computed(() => props.disabled);\n  const isReadonly = computed(() => props.readonly);\n  const isValidating = shallowRef(false);\n  const items = ref([]);\n  const errors = ref([]);\n  async function validate() {\n    const results = [];\n    let valid = true;\n    errors.value = [];\n    isValidating.value = true;\n    for (const item of items.value) {\n      const itemErrorMessages = await item.validate();\n      if (itemErrorMessages.length > 0) {\n        valid = false;\n        results.push({\n          id: item.id,\n          errorMessages: itemErrorMessages\n        });\n      }\n      if (!valid && props.fastFail) break;\n    }\n    errors.value = results;\n    isValidating.value = false;\n    return {\n      valid,\n      errors: errors.value\n    };\n  }\n  function reset() {\n    items.value.forEach(item => item.reset());\n  }\n  function resetValidation() {\n    items.value.forEach(item => item.resetValidation());\n  }\n  watch(items, () => {\n    let valid = 0;\n    let invalid = 0;\n    const results = [];\n    for (const item of items.value) {\n      if (item.isValid === false) {\n        invalid++;\n        results.push({\n          id: item.id,\n          errorMessages: item.errorMessages\n        });\n      } else if (item.isValid === true) valid++;\n    }\n    errors.value = results;\n    model.value = invalid > 0 ? false : valid === items.value.length ? true : null;\n  }, {\n    deep: true\n  });\n  provide(FormKey, {\n    register: _ref => {\n      let {\n        id,\n        validate,\n        reset,\n        resetValidation\n      } = _ref;\n      if (items.value.some(item => item.id === id)) {\n        consoleWarn(`Duplicate input name \"${id}\"`);\n      }\n      items.value.push({\n        id,\n        validate,\n        reset,\n        resetValidation,\n        isValid: null,\n        errorMessages: []\n      });\n    },\n    unregister: id => {\n      items.value = items.value.filter(item => {\n        return item.id !== id;\n      });\n    },\n    update: (id, isValid, errorMessages) => {\n      const found = items.value.find(item => item.id === id);\n      if (!found) return;\n      found.isValid = isValid;\n      found.errorMessages = errorMessages;\n    },\n    isDisabled,\n    isReadonly,\n    isValidating,\n    isValid: model,\n    items,\n    validateOn: toRef(props, 'validateOn')\n  });\n  return {\n    errors,\n    isDisabled,\n    isReadonly,\n    isValidating,\n    isValid: model,\n    items,\n    validate,\n    reset,\n    resetValidation\n  };\n}\nexport function useForm() {\n  return inject(FormKey, null);\n}\n//# sourceMappingURL=form.mjs.map",
      "start": 1721076639439,
      "end": 1721076639628,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721076639628,
      "end": 1721076639628,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721076639629,
      "end": 1721076639629,
      "order": "normal"
    }
  ]
}
