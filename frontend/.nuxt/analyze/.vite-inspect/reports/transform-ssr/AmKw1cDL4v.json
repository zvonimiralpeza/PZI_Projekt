{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/edit.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n    <div>\r\n      <v-container>\r\n        <v-row justify=\"center\">\r\n          <v-col cols=\"12\" sm=\"8\" md=\"6\">\r\n            <v-card class=\"small-card\">\r\n              <v-card-title class=\"text-h6 text-center\" style=\"color: #2b9300;\">Uređivanje umjetnine</v-card-title>\r\n              <v-card-text>\r\n                <v-form @submit.prevent=\"submitForm\">\r\n                  <v-text-field v-model=\"naslov\" label=\"Naslov umjetnine\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"cijena\" label=\"Cijena umjetnine\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"autor\" label=\"Autor umjetnine\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"godina\" label=\"Godina stvaranja\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"tehnika\" label=\"Tehnika\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"url\" label=\"URL\" required persistent></v-text-field>\r\n                  <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" accept=\".jpg, .jpeg, .png\" />\r\n                  <br><br>\r\n                  <v-btn type=\"submit\" color=\"green\">Potvrdi</v-btn>\r\n                </v-form>\r\n                <br>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n  <script>\r\n  export default {\r\n    created() {\r\n        this.dohvatiSlike()\r\n            .then(() => {\r\n                let matchingSlika = this.slike.find(el => el.id === parseInt(this.$route.query.id))\r\n                matchingSlika = JSON.parse(JSON.stringify(matchingSlika))\r\n                if (matchingSlika) {\r\n                    this.naslov = matchingSlika.name\r\n                    this.cijena = matchingSlika.price\r\n                    this.autor = matchingSlika.author\r\n                    this.godina = matchingSlika.year\r\n                    this.tehnika = matchingSlika.technique\r\n                    this.url = matchingSlika.url\r\n                }\r\n            })\r\n    },\r\n    data() {\r\n      return {\r\n        naslov: '',\r\n        cijena: '',\r\n        autor: '',\r\n        godina: '',\r\n        tehnika: '',\r\n        url: '',\r\n        slike: []\r\n      };\r\n    },\r\n    methods: {\r\n    async dohvatiSlike() {\r\n      try {\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/products`, {\r\n          method: 'GET'\r\n        });\r\n        console.log(response);\r\n        this.slike = response.products;\r\n      } catch (error) {\r\n        console.error('Error making POST request:', error);\r\n      }\r\n    },\r\n      async submitForm() {\r\n        try {\r\n          const response = await $fetch(`${this.$config.public.BASE_URL}/products/${this.$route.query.id}`, {\r\n            method: 'PUT',\r\n            body: {\r\n              name: this.naslov,\r\n              price: this.cijena,\r\n              author: this.autor,\r\n              year: this.godina,\r\n              technique: this.tehnika,\r\n              url: this.url,\r\n              seller_id: 1\r\n            }\r\n          })\r\n          this.$router.push('/kupovina');\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  ",
      "start": 1726158896925,
      "end": 1726158897726,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726158897726,
      "end": 1726158897726,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\r\n  const _sfc_main = {\r\n    created() {\r\n        this.dohvatiSlike()\r\n            .then(() => {\r\n                let matchingSlika = this.slike.find(el => el.id === parseInt(this.$route.query.id))\r\n                matchingSlika = JSON.parse(JSON.stringify(matchingSlika))\r\n                if (matchingSlika) {\r\n                    this.naslov = matchingSlika.name\r\n                    this.cijena = matchingSlika.price\r\n                    this.autor = matchingSlika.author\r\n                    this.godina = matchingSlika.year\r\n                    this.tehnika = matchingSlika.technique\r\n                    this.url = matchingSlika.url\r\n                }\r\n            })\r\n    },\r\n    data() {\r\n      return {\r\n        naslov: '',\r\n        cijena: '',\r\n        autor: '',\r\n        godina: '',\r\n        tehnika: '',\r\n        url: '',\r\n        slike: []\r\n      };\r\n    },\r\n    methods: {\r\n    async dohvatiSlike() {\r\n      try {\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/products`, {\r\n          method: 'GET'\r\n        });\r\n        console.log(response);\r\n        this.slike = response.products;\r\n      } catch (error) {\r\n        console.error('Error making POST request:', error);\r\n      }\r\n    },\r\n      async submitForm() {\r\n        try {\r\n          const response = await $fetch(`${this.$config.public.BASE_URL}/products/${this.$route.query.id}`, {\r\n            method: 'PUT',\r\n            body: {\r\n              name: this.naslov,\r\n              price: this.cijena,\r\n              author: this.autor,\r\n              year: this.godina,\r\n              technique: this.tehnika,\r\n              url: this.url,\r\n              seller_id: 1\r\n            }\r\n          })\r\n          this.$router.push('/kupovina');\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  const _component_v_container = _resolveComponent(\"v-container\")\n  const _component_v_row = _resolveComponent(\"v-row\")\n  const _component_v_col = _resolveComponent(\"v-col\")\n  const _component_v_card = _resolveComponent(\"v-card\")\n  const _component_v_card_title = _resolveComponent(\"v-card-title\")\n  const _component_v_card_text = _resolveComponent(\"v-card-text\")\n  const _component_v_form = _resolveComponent(\"v-form\")\n  const _component_v_text_field = _resolveComponent(\"v-text-field\")\n  const _component_v_btn = _resolveComponent(\"v-btn\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_v_container, null, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_v_row, { justify: \"center\" }, {\n          default: _withCtx((_, _push, _parent, _scopeId) => {\n            if (_push) {\n              _push(_ssrRenderComponent(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_v_card, { class: \"small-card\" }, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(_ssrRenderComponent(_component_v_card_title, {\n                            class: \"text-h6 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(`Uređivanje umjetnine`)\n                              } else {\n                                return [\n                                  _createTextVNode(\"Uređivanje umjetnine\")\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                          _push(_ssrRenderComponent(_component_v_card_text, null, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(_ssrRenderComponent(_component_v_form, { onSubmit: $options.submitForm }, {\n                                  default: _withCtx((_, _push, _parent, _scopeId) => {\n                                    if (_push) {\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.naslov,\n                                        \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                        label: \"Naslov umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.cijena,\n                                        \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                        label: \"Cijena umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.autor,\n                                        \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                        label: \"Autor umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.godina,\n                                        \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                        label: \"Godina stvaranja\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.tehnika,\n                                        \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                        label: \"Tehnika\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.url,\n                                        \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                        label: \"URL\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(`<input type=\"file\" accept=\".jpg, .jpeg, .png\"${\n                                        _scopeId\n                                      }><br${\n                                        _scopeId\n                                      }><br${\n                                        _scopeId\n                                      }>`)\n                                      _push(_ssrRenderComponent(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx((_, _push, _parent, _scopeId) => {\n                                          if (_push) {\n                                            _push(`Potvrdi`)\n                                          } else {\n                                            return [\n                                              _createTextVNode(\"Potvrdi\")\n                                            ]\n                                          }\n                                        }),\n                                        _: 1\n                                      }, _parent, _scopeId))\n                                    } else {\n                                      return [\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.naslov,\n                                          \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                          label: \"Naslov umjetnine\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.cijena,\n                                          \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                          label: \"Cijena umjetnine\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.autor,\n                                          \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                          label: \"Autor umjetnine\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.godina,\n                                          \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                          label: \"Godina stvaranja\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.tehnika,\n                                          \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                          label: \"Tehnika\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.url,\n                                          \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                          label: \"URL\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(\"input\", {\n                                          type: \"file\",\n                                          ref: \"fileInput\",\n                                          onChange: _ctx.handleFileChange,\n                                          accept: \".jpg, .jpeg, .png\"\n                                        }, null, 40, [\"onChange\"]),\n                                        _createVNode(\"br\"),\n                                        _createVNode(\"br\"),\n                                        _createVNode(_component_v_btn, {\n                                          type: \"submit\",\n                                          color: \"green\"\n                                        }, {\n                                          default: _withCtx(() => [\n                                            _createTextVNode(\"Potvrdi\")\n                                          ]),\n                                          _: 1\n                                        })\n                                      ]\n                                    }\n                                  }),\n                                  _: 1\n                                }, _parent, _scopeId))\n                                _push(`<br${_scopeId}>`)\n                              } else {\n                                return [\n                                  _createVNode(_component_v_form, {\n                                    onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.naslov,\n                                        \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                        label: \"Naslov umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.cijena,\n                                        \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                        label: \"Cijena umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.autor,\n                                        \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                        label: \"Autor umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.godina,\n                                        \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                        label: \"Godina stvaranja\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.tehnika,\n                                        \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                        label: \"Tehnika\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.url,\n                                        \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                        label: \"URL\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(\"input\", {\n                                        type: \"file\",\n                                        ref: \"fileInput\",\n                                        onChange: _ctx.handleFileChange,\n                                        accept: \".jpg, .jpeg, .png\"\n                                      }, null, 40, [\"onChange\"]),\n                                      _createVNode(\"br\"),\n                                      _createVNode(\"br\"),\n                                      _createVNode(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createTextVNode(\"Potvrdi\")\n                                        ]),\n                                        _: 1\n                                      })\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"onSubmit\"]),\n                                  _createVNode(\"br\")\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                        } else {\n                          return [\n                            _createVNode(_component_v_card_title, {\n                              class: \"text-h6 text-center\",\n                              style: {\"color\":\"#2b9300\"}\n                            }, {\n                              default: _withCtx(() => [\n                                _createTextVNode(\"Uređivanje umjetnine\")\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_v_card_text, null, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_form, {\n                                  onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.naslov,\n                                      \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                      label: \"Naslov umjetnine\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.cijena,\n                                      \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                      label: \"Cijena umjetnine\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.autor,\n                                      \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                      label: \"Autor umjetnine\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.godina,\n                                      \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                      label: \"Godina stvaranja\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.tehnika,\n                                      \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                      label: \"Tehnika\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.url,\n                                      \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                      label: \"URL\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(\"input\", {\n                                      type: \"file\",\n                                      ref: \"fileInput\",\n                                      onChange: _ctx.handleFileChange,\n                                      accept: \".jpg, .jpeg, .png\"\n                                    }, null, 40, [\"onChange\"]),\n                                    _createVNode(\"br\"),\n                                    _createVNode(\"br\"),\n                                    _createVNode(_component_v_btn, {\n                                      type: \"submit\",\n                                      color: \"green\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"Potvrdi\")\n                                      ]),\n                                      _: 1\n                                    })\n                                  ]),\n                                  _: 1\n                                }, 8, [\"onSubmit\"]),\n                                _createVNode(\"br\")\n                              ]),\n                              _: 1\n                            })\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_v_card, { class: \"small-card\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_card_title, {\n                            class: \"text-h6 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"Uređivanje umjetnine\")\n                            ]),\n                            _: 1\n                          }),\n                          _createVNode(_component_v_card_text, null, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_form, {\n                                onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.naslov,\n                                    \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                    label: \"Naslov umjetnine\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.cijena,\n                                    \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                    label: \"Cijena umjetnine\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.autor,\n                                    \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                    label: \"Autor umjetnine\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.godina,\n                                    \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                    label: \"Godina stvaranja\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.tehnika,\n                                    \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                    label: \"Tehnika\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.url,\n                                    \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                    label: \"URL\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(\"input\", {\n                                    type: \"file\",\n                                    ref: \"fileInput\",\n                                    onChange: _ctx.handleFileChange,\n                                    accept: \".jpg, .jpeg, .png\"\n                                  }, null, 40, [\"onChange\"]),\n                                  _createVNode(\"br\"),\n                                  _createVNode(\"br\"),\n                                  _createVNode(_component_v_btn, {\n                                    type: \"submit\",\n                                    color: \"green\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(\"Potvrdi\")\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              }, 8, [\"onSubmit\"]),\n                              _createVNode(\"br\")\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n            } else {\n              return [\n                _createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"8\",\n                  md: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_v_card, { class: \"small-card\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_v_card_title, {\n                          class: \"text-h6 text-center\",\n                          style: {\"color\":\"#2b9300\"}\n                        }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Uređivanje umjetnine\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_v_card_text, null, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_v_form, {\n                              onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.naslov,\n                                  \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                  label: \"Naslov umjetnine\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.cijena,\n                                  \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                  label: \"Cijena umjetnine\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.autor,\n                                  \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                  label: \"Autor umjetnine\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.godina,\n                                  \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                  label: \"Godina stvaranja\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.tehnika,\n                                  \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                  label: \"Tehnika\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.url,\n                                  \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                  label: \"URL\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(\"input\", {\n                                  type: \"file\",\n                                  ref: \"fileInput\",\n                                  onChange: _ctx.handleFileChange,\n                                  accept: \".jpg, .jpeg, .png\"\n                                }, null, 40, [\"onChange\"]),\n                                _createVNode(\"br\"),\n                                _createVNode(\"br\"),\n                                _createVNode(_component_v_btn, {\n                                  type: \"submit\",\n                                  color: \"green\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(\"Potvrdi\")\n                                  ]),\n                                  _: 1\n                                })\n                              ]),\n                              _: 1\n                            }, 8, [\"onSubmit\"]),\n                            _createVNode(\"br\")\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]\n            }\n          }),\n          _: 1\n        }, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_v_row, { justify: \"center\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_v_card, { class: \"small-card\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_card_title, {\n                        class: \"text-h6 text-center\",\n                        style: {\"color\":\"#2b9300\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Uređivanje umjetnine\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_form, {\n                            onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.naslov,\n                                \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                label: \"Naslov umjetnine\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.cijena,\n                                \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                label: \"Cijena umjetnine\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.autor,\n                                \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                label: \"Autor umjetnine\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.godina,\n                                \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                label: \"Godina stvaranja\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.tehnika,\n                                \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                label: \"Tehnika\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.url,\n                                \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                label: \"URL\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(\"input\", {\n                                type: \"file\",\n                                ref: \"fileInput\",\n                                onChange: _ctx.handleFileChange,\n                                accept: \".jpg, .jpeg, .png\"\n                              }, null, 40, [\"onChange\"]),\n                              _createVNode(\"br\"),\n                              _createVNode(\"br\"),\n                              _createVNode(_component_v_btn, {\n                                type: \"submit\",\n                                color: \"green\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(\"Potvrdi\")\n                                ]),\n                                _: 1\n                              })\n                            ]),\n                            _: 1\n                          }, 8, [\"onSubmit\"]),\n                          _createVNode(\"br\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/edit.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1726158897726,
      "end": 1726158897755,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/edit.vue",
        "names": [],
        "sources": [
          "C:/Users/DT User/Desktop/ProjektPZI/frontend/pages/edit.vue"
        ],
        "sourcesContent": [
          "<template>\r\n    <div>\r\n      <v-container>\r\n        <v-row justify=\"center\">\r\n          <v-col cols=\"12\" sm=\"8\" md=\"6\">\r\n            <v-card class=\"small-card\">\r\n              <v-card-title class=\"text-h6 text-center\" style=\"color: #2b9300;\">Uređivanje umjetnine</v-card-title>\r\n              <v-card-text>\r\n                <v-form @submit.prevent=\"submitForm\">\r\n                  <v-text-field v-model=\"naslov\" label=\"Naslov umjetnine\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"cijena\" label=\"Cijena umjetnine\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"autor\" label=\"Autor umjetnine\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"godina\" label=\"Godina stvaranja\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"tehnika\" label=\"Tehnika\" required persistent></v-text-field>\r\n                  <v-text-field v-model=\"url\" label=\"URL\" required persistent></v-text-field>\r\n                  <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" accept=\".jpg, .jpeg, .png\" />\r\n                  <br><br>\r\n                  <v-btn type=\"submit\" color=\"green\">Potvrdi</v-btn>\r\n                </v-form>\r\n                <br>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n  <script>\r\n  export default {\r\n    created() {\r\n        this.dohvatiSlike()\r\n            .then(() => {\r\n                let matchingSlika = this.slike.find(el => el.id === parseInt(this.$route.query.id))\r\n                matchingSlika = JSON.parse(JSON.stringify(matchingSlika))\r\n                if (matchingSlika) {\r\n                    this.naslov = matchingSlika.name\r\n                    this.cijena = matchingSlika.price\r\n                    this.autor = matchingSlika.author\r\n                    this.godina = matchingSlika.year\r\n                    this.tehnika = matchingSlika.technique\r\n                    this.url = matchingSlika.url\r\n                }\r\n            })\r\n    },\r\n    data() {\r\n      return {\r\n        naslov: '',\r\n        cijena: '',\r\n        autor: '',\r\n        godina: '',\r\n        tehnika: '',\r\n        url: '',\r\n        slike: []\r\n      };\r\n    },\r\n    methods: {\r\n    async dohvatiSlike() {\r\n      try {\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/products`, {\r\n          method: 'GET'\r\n        });\r\n        console.log(response);\r\n        this.slike = response.products;\r\n      } catch (error) {\r\n        console.error('Error making POST request:', error);\r\n      }\r\n    },\r\n      async submitForm() {\r\n        try {\r\n          const response = await $fetch(`${this.$config.public.BASE_URL}/products/${this.$route.query.id}`, {\r\n            method: 'PUT',\r\n            body: {\r\n              name: this.naslov,\r\n              price: this.cijena,\r\n              author: this.autor,\r\n              year: this.godina,\r\n              technique: this.tehnika,\r\n              url: this.url,\r\n              seller_id: 1\r\n            }\r\n          })\r\n          this.$router.push('/kupovina');\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  "
        ],
        "mappings": "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"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726158897755,
      "end": 1726158897755,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726158897755,
      "end": 1726158897755,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726158897755,
      "end": 1726158897755,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726158897755,
      "end": 1726158897755,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726158897755,
      "end": 1726158897755,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726158897756,
      "end": 1726158897756,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "result": "\r\n  const _sfc_main = {\r\n    created() {\r\n        this.dohvatiSlike()\r\n            .then(() => {\r\n                let matchingSlika = this.slike.find(el => el.id === parseInt(this.$route.query.id))\r\n                matchingSlika = JSON.parse(JSON.stringify(matchingSlika))\r\n                if (matchingSlika) {\r\n                    this.naslov = matchingSlika.name\r\n                    this.cijena = matchingSlika.price\r\n                    this.autor = matchingSlika.author\r\n                    this.godina = matchingSlika.year\r\n                    this.tehnika = matchingSlika.technique\r\n                    this.url = matchingSlika.url\r\n                }\r\n            })\r\n    },\r\n    data() {\r\n      return {\r\n        naslov: '',\r\n        cijena: '',\r\n        autor: '',\r\n        godina: '',\r\n        tehnika: '',\r\n        url: '',\r\n        slike: []\r\n      };\r\n    },\r\n    methods: {\r\n    async dohvatiSlike() {\r\n      try {\r\n        const response = await $fetch(`${this.$config.public.BASE_URL}/products`, {\r\n          method: 'GET'\r\n        });\r\n        console.log(response);\r\n        this.slike = response.products;\r\n      } catch (error) {\r\n        console.error('Error making POST request:', error);\r\n      }\r\n    },\r\n      async submitForm() {\r\n        try {\r\n          const response = await $fetch(`${this.$config.public.BASE_URL}/products/${this.$route.query.id}`, {\r\n            method: 'PUT',\r\n            body: {\r\n              name: this.naslov,\r\n              price: this.cijena,\r\n              author: this.autor,\r\n              year: this.godina,\r\n              technique: this.tehnika,\r\n              url: this.url,\r\n              seller_id: 1\r\n            }\r\n          })\r\n          this.$router.push('/kupovina');\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n                                                                 \n                                                     \n                                                     \n                                                       \n                                                                   \n                                                                 \n                                                       \n                                                                   \n                                                     \n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_v_container, null, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_v_row, { justify: \"center\" }, {\n          default: _withCtx((_, _push, _parent, _scopeId) => {\n            if (_push) {\n              _push(_ssrRenderComponent(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_v_card, { class: \"small-card\" }, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(_ssrRenderComponent(_component_v_card_title, {\n                            class: \"text-h6 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(`Uređivanje umjetnine`)\n                              } else {\n                                return [\n                                  _createTextVNode(\"Uređivanje umjetnine\")\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                          _push(_ssrRenderComponent(_component_v_card_text, null, {\n                            default: _withCtx((_, _push, _parent, _scopeId) => {\n                              if (_push) {\n                                _push(_ssrRenderComponent(_component_v_form, { onSubmit: $options.submitForm }, {\n                                  default: _withCtx((_, _push, _parent, _scopeId) => {\n                                    if (_push) {\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.naslov,\n                                        \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                        label: \"Naslov umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.cijena,\n                                        \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                        label: \"Cijena umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.autor,\n                                        \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                        label: \"Autor umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.godina,\n                                        \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                        label: \"Godina stvaranja\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.tehnika,\n                                        \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                        label: \"Tehnika\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(_ssrRenderComponent(_component_v_text_field, {\n                                        modelValue: $data.url,\n                                        \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                        label: \"URL\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, _parent, _scopeId))\n                                      _push(`<input type=\"file\" accept=\".jpg, .jpeg, .png\"${\n                                        _scopeId\n                                      }><br${\n                                        _scopeId\n                                      }><br${\n                                        _scopeId\n                                      }>`)\n                                      _push(_ssrRenderComponent(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx((_, _push, _parent, _scopeId) => {\n                                          if (_push) {\n                                            _push(`Potvrdi`)\n                                          } else {\n                                            return [\n                                              _createTextVNode(\"Potvrdi\")\n                                            ]\n                                          }\n                                        }),\n                                        _: 1\n                                      }, _parent, _scopeId))\n                                    } else {\n                                      return [\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.naslov,\n                                          \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                          label: \"Naslov umjetnine\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.cijena,\n                                          \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                          label: \"Cijena umjetnine\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.autor,\n                                          \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                          label: \"Autor umjetnine\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.godina,\n                                          \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                          label: \"Godina stvaranja\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.tehnika,\n                                          \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                          label: \"Tehnika\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(_component_v_text_field, {\n                                          modelValue: $data.url,\n                                          \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                          label: \"URL\",\n                                          required: \"\",\n                                          persistent: \"\"\n                                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                        _createVNode(\"input\", {\n                                          type: \"file\",\n                                          ref: \"fileInput\",\n                                          onChange: _ctx.handleFileChange,\n                                          accept: \".jpg, .jpeg, .png\"\n                                        }, null, 40, [\"onChange\"]),\n                                        _createVNode(\"br\"),\n                                        _createVNode(\"br\"),\n                                        _createVNode(_component_v_btn, {\n                                          type: \"submit\",\n                                          color: \"green\"\n                                        }, {\n                                          default: _withCtx(() => [\n                                            _createTextVNode(\"Potvrdi\")\n                                          ]),\n                                          _: 1\n                                        })\n                                      ]\n                                    }\n                                  }),\n                                  _: 1\n                                }, _parent, _scopeId))\n                                _push(`<br${_scopeId}>`)\n                              } else {\n                                return [\n                                  _createVNode(_component_v_form, {\n                                    onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.naslov,\n                                        \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                        label: \"Naslov umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.cijena,\n                                        \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                        label: \"Cijena umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.autor,\n                                        \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                        label: \"Autor umjetnine\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.godina,\n                                        \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                        label: \"Godina stvaranja\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.tehnika,\n                                        \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                        label: \"Tehnika\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(_component_v_text_field, {\n                                        modelValue: $data.url,\n                                        \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                        label: \"URL\",\n                                        required: \"\",\n                                        persistent: \"\"\n                                      }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                      _createVNode(\"input\", {\n                                        type: \"file\",\n                                        ref: \"fileInput\",\n                                        onChange: _ctx.handleFileChange,\n                                        accept: \".jpg, .jpeg, .png\"\n                                      }, null, 40, [\"onChange\"]),\n                                      _createVNode(\"br\"),\n                                      _createVNode(\"br\"),\n                                      _createVNode(_component_v_btn, {\n                                        type: \"submit\",\n                                        color: \"green\"\n                                      }, {\n                                        default: _withCtx(() => [\n                                          _createTextVNode(\"Potvrdi\")\n                                        ]),\n                                        _: 1\n                                      })\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"onSubmit\"]),\n                                  _createVNode(\"br\")\n                                ]\n                              }\n                            }),\n                            _: 1\n                          }, _parent, _scopeId))\n                        } else {\n                          return [\n                            _createVNode(_component_v_card_title, {\n                              class: \"text-h6 text-center\",\n                              style: {\"color\":\"#2b9300\"}\n                            }, {\n                              default: _withCtx(() => [\n                                _createTextVNode(\"Uređivanje umjetnine\")\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_v_card_text, null, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_form, {\n                                  onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.naslov,\n                                      \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                      label: \"Naslov umjetnine\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.cijena,\n                                      \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                      label: \"Cijena umjetnine\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.autor,\n                                      \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                      label: \"Autor umjetnine\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.godina,\n                                      \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                      label: \"Godina stvaranja\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.tehnika,\n                                      \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                      label: \"Tehnika\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(_component_v_text_field, {\n                                      modelValue: $data.url,\n                                      \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                      label: \"URL\",\n                                      required: \"\",\n                                      persistent: \"\"\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                    _createVNode(\"input\", {\n                                      type: \"file\",\n                                      ref: \"fileInput\",\n                                      onChange: _ctx.handleFileChange,\n                                      accept: \".jpg, .jpeg, .png\"\n                                    }, null, 40, [\"onChange\"]),\n                                    _createVNode(\"br\"),\n                                    _createVNode(\"br\"),\n                                    _createVNode(_component_v_btn, {\n                                      type: \"submit\",\n                                      color: \"green\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"Potvrdi\")\n                                      ]),\n                                      _: 1\n                                    })\n                                  ]),\n                                  _: 1\n                                }, 8, [\"onSubmit\"]),\n                                _createVNode(\"br\")\n                              ]),\n                              _: 1\n                            })\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_v_card, { class: \"small-card\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_card_title, {\n                            class: \"text-h6 text-center\",\n                            style: {\"color\":\"#2b9300\"}\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"Uređivanje umjetnine\")\n                            ]),\n                            _: 1\n                          }),\n                          _createVNode(_component_v_card_text, null, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_form, {\n                                onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.naslov,\n                                    \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                    label: \"Naslov umjetnine\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.cijena,\n                                    \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                    label: \"Cijena umjetnine\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.autor,\n                                    \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                    label: \"Autor umjetnine\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.godina,\n                                    \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                    label: \"Godina stvaranja\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.tehnika,\n                                    \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                    label: \"Tehnika\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(_component_v_text_field, {\n                                    modelValue: $data.url,\n                                    \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                    label: \"URL\",\n                                    required: \"\",\n                                    persistent: \"\"\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                  _createVNode(\"input\", {\n                                    type: \"file\",\n                                    ref: \"fileInput\",\n                                    onChange: _ctx.handleFileChange,\n                                    accept: \".jpg, .jpeg, .png\"\n                                  }, null, 40, [\"onChange\"]),\n                                  _createVNode(\"br\"),\n                                  _createVNode(\"br\"),\n                                  _createVNode(_component_v_btn, {\n                                    type: \"submit\",\n                                    color: \"green\"\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(\"Potvrdi\")\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              }, 8, [\"onSubmit\"]),\n                              _createVNode(\"br\")\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n            } else {\n              return [\n                _createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"8\",\n                  md: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_v_card, { class: \"small-card\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_v_card_title, {\n                          class: \"text-h6 text-center\",\n                          style: {\"color\":\"#2b9300\"}\n                        }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Uređivanje umjetnine\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_v_card_text, null, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_v_form, {\n                              onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.naslov,\n                                  \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                  label: \"Naslov umjetnine\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.cijena,\n                                  \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                  label: \"Cijena umjetnine\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.autor,\n                                  \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                  label: \"Autor umjetnine\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.godina,\n                                  \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                  label: \"Godina stvaranja\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.tehnika,\n                                  \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                  label: \"Tehnika\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(_component_v_text_field, {\n                                  modelValue: $data.url,\n                                  \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                  label: \"URL\",\n                                  required: \"\",\n                                  persistent: \"\"\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                                _createVNode(\"input\", {\n                                  type: \"file\",\n                                  ref: \"fileInput\",\n                                  onChange: _ctx.handleFileChange,\n                                  accept: \".jpg, .jpeg, .png\"\n                                }, null, 40, [\"onChange\"]),\n                                _createVNode(\"br\"),\n                                _createVNode(\"br\"),\n                                _createVNode(_component_v_btn, {\n                                  type: \"submit\",\n                                  color: \"green\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(\"Potvrdi\")\n                                  ]),\n                                  _: 1\n                                })\n                              ]),\n                              _: 1\n                            }, 8, [\"onSubmit\"]),\n                            _createVNode(\"br\")\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]\n            }\n          }),\n          _: 1\n        }, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_v_row, { justify: \"center\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_v_col, {\n                cols: \"12\",\n                sm: \"8\",\n                md: \"6\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_v_card, { class: \"small-card\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_card_title, {\n                        class: \"text-h6 text-center\",\n                        style: {\"color\":\"#2b9300\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Uređivanje umjetnine\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_form, {\n                            onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.naslov,\n                                \"onUpdate:modelValue\": $event => (($data.naslov) = $event),\n                                label: \"Naslov umjetnine\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.cijena,\n                                \"onUpdate:modelValue\": $event => (($data.cijena) = $event),\n                                label: \"Cijena umjetnine\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.autor,\n                                \"onUpdate:modelValue\": $event => (($data.autor) = $event),\n                                label: \"Autor umjetnine\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.godina,\n                                \"onUpdate:modelValue\": $event => (($data.godina) = $event),\n                                label: \"Godina stvaranja\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.tehnika,\n                                \"onUpdate:modelValue\": $event => (($data.tehnika) = $event),\n                                label: \"Tehnika\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(_component_v_text_field, {\n                                modelValue: $data.url,\n                                \"onUpdate:modelValue\": $event => (($data.url) = $event),\n                                label: \"URL\",\n                                required: \"\",\n                                persistent: \"\"\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n                              _createVNode(\"input\", {\n                                type: \"file\",\n                                ref: \"fileInput\",\n                                onChange: _ctx.handleFileChange,\n                                accept: \".jpg, .jpeg, .png\"\n                              }, null, 40, [\"onChange\"]),\n                              _createVNode(\"br\"),\n                              _createVNode(\"br\"),\n                              _createVNode(_component_v_btn, {\n                                type: \"submit\",\n                                color: \"green\"\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(\"Potvrdi\")\n                                ]),\n                                _: 1\n                              })\n                            ]),\n                            _: 1\n                          }, 8, [\"onSubmit\"]),\n                          _createVNode(\"br\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/edit.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])\n\n/* Vuetify */\nimport { VBtn as _component_v_btn } from \"vuetify/lib/components/VBtn/index.mjs\"\nimport { VCard as _component_v_card, VCardTitle as _component_v_card_title, VCardText as _component_v_card_text } from \"vuetify/lib/components/VCard/index.mjs\"\nimport { VForm as _component_v_form } from \"vuetify/lib/components/VForm/index.mjs\"\nimport { VContainer as _component_v_container, VRow as _component_v_row, VCol as _component_v_col } from \"vuetify/lib/components/VGrid/index.mjs\"\nimport { VTextField as _component_v_text_field } from \"vuetify/lib/components/VTextField/index.mjs\"\n\n",
      "start": 1726158897756,
      "end": 1726158897756,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726158897756,
      "end": 1726158897756,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726158897756,
      "end": 1726158897757,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726158897757,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726158897758,
      "end": 1726158897758,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726158897758,
      "end": 1726158897767,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726158897758,
      "end": 1726158897767,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726158897767,
      "end": 1726158897768,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726158897767,
      "end": 1726158897768,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726158897768,
      "end": 1726158897768,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726158897768,
      "end": 1726158897768,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1726158897768,
      "end": 1726158897768,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726158897768,
      "end": 1726158897768,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726158897768,
      "end": 1726158897768,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726158897768,
      "end": 1726158897769,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726158897769,
      "end": 1726158897769,
      "order": "normal"
    }
  ]
}
