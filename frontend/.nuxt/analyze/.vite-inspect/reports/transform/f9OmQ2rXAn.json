{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VAlert/VAlert.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VAlert.css\";\n\n// Components\nimport { VAlertTitle } from \"./VAlertTitle.mjs\";\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nconst allowedTypes = ['success', 'info', 'warning', 'error'];\nexport const makeVAlertProps = propsFactory({\n  border: {\n    type: [Boolean, String],\n    validator: val => {\n      return typeof val === 'boolean' || ['top', 'end', 'bottom', 'start'].includes(val);\n    }\n  },\n  borderColor: String,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$close'\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close'\n  },\n  icon: {\n    type: [Boolean, String, Function, Object],\n    default: null\n  },\n  modelValue: {\n    type: Boolean,\n    default: true\n  },\n  prominent: Boolean,\n  title: String,\n  text: String,\n  type: {\n    type: String,\n    validator: val => allowedTypes.includes(val)\n  },\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'flat'\n  })\n}, 'VAlert');\nexport const VAlert = genericComponent()({\n  name: 'VAlert',\n  props: makeVAlertProps(),\n  emits: {\n    'click:close': e => true,\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const icon = computed(() => {\n      if (props.icon === false) return undefined;\n      if (!props.type) return props.icon;\n      return props.icon ?? `$${props.type}`;\n    });\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant\n    }));\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'borderColor'));\n    const {\n      t\n    } = useLocale();\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick(e) {\n        isActive.value = false;\n        emit('click:close', e);\n      }\n    }));\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value);\n      const hasTitle = !!(slots.title || props.title);\n      const hasClose = !!(slots.close || props.closable);\n      return isActive.value && _createVNode(props.tag, {\n        \"class\": ['v-alert', props.border && {\n          'v-alert--border': !!props.border,\n          [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true\n        }, {\n          'v-alert--prominent': props.prominent\n        }, themeClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value, props.class],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"role\": \"alert\"\n      }, {\n        default: () => [genOverlays(false, 'v-alert'), props.border && _createVNode(\"div\", {\n          \"key\": \"border\",\n          \"class\": ['v-alert__border', textColorClasses.value],\n          \"style\": textColorStyles.value\n        }, null), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-alert__prepend\"\n        }, [!slots.prepend ? _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"density\": props.density,\n          \"icon\": icon.value,\n          \"size\": props.prominent ? 44 : 28\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !icon.value,\n          \"defaults\": {\n            VIcon: {\n              density: props.density,\n              icon: icon.value,\n              size: props.prominent ? 44 : 28\n            }\n          }\n        }, slots.prepend)]), _createVNode(\"div\", {\n          \"class\": \"v-alert__content\"\n        }, [hasTitle && _createVNode(VAlertTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [slots.title?.() ?? props.title]\n        }), slots.text?.() ?? props.text, slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-alert__append\"\n        }, [slots.append()]), hasClose && _createVNode(\"div\", {\n          \"key\": \"close\",\n          \"class\": \"v-alert__close\"\n        }, [!slots.close ? _createVNode(VBtn, _mergeProps({\n          \"key\": \"close-btn\",\n          \"icon\": props.closeIcon,\n          \"size\": \"x-small\",\n          \"variant\": \"text\"\n        }, closeProps.value), null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"close-defaults\",\n          \"defaults\": {\n            VBtn: {\n              icon: props.closeIcon,\n              size: 'x-small',\n              variant: 'text'\n            }\n          }\n        }, {\n          default: () => [slots.close?.({\n            props: closeProps.value\n          })]\n        })])]\n      });\n    };\n  }\n});\n//# sourceMappingURL=VAlert.mjs.map",
      "start": 1726158884632,
      "end": 1726158884812,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726158884812,
      "end": 1726158884812,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726158884813,
      "end": 1726158884813,
      "order": "normal"
    }
  ]
}
