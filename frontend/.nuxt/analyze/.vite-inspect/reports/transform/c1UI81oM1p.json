{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/nuxt/dist/app/plugins/payload.client.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { parseURL } from \"ufo\";\nimport { defineNuxtPlugin } from \"../nuxt.js\";\nimport { loadPayload } from \"../composables/payload.js\";\nimport { onNuxtReady } from \"../composables/ready.js\";\nimport { useRouter } from \"../composables/router.js\";\nimport { getAppManifest } from \"../composables/manifest.js\";\nimport { appManifest as isAppManifestEnabled } from \"#build/nuxt.config.mjs\";\nexport default defineNuxtPlugin({\n  name: \"nuxt:payload\",\n  setup(nuxtApp) {\n    if (process.dev) {\n      return;\n    }\n    useRouter().beforeResolve(async (to, from) => {\n      if (to.path === from.path) {\n        return;\n      }\n      const payload = await loadPayload(to.path);\n      if (!payload) {\n        return;\n      }\n      Object.assign(nuxtApp.static.data, payload.data);\n    });\n    onNuxtReady(() => {\n      nuxtApp.hooks.hook(\"link:prefetch\", async (url) => {\n        if (!parseURL(url).protocol) {\n          await loadPayload(url);\n        }\n      });\n      if (isAppManifestEnabled && navigator.connection?.effectiveType !== \"slow-2g\") {\n        setTimeout(getAppManifest, 1e3);\n      }\n    });\n  }\n});\n",
      "start": 1721076613160,
      "end": 1721076613384,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721076613384,
      "end": 1721076613384,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076613385,
      "end": 1721076613385,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721076613385,
      "end": 1721076613386,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1721076613386,
      "end": 1721076613386,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1721076613386,
      "end": 1721076613386,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721076613386,
      "end": 1721076613387,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076613387,
      "end": 1721076613387,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721076613387,
      "end": 1721076613387,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { parseURL } from \"ufo\";\nimport { defineNuxtPlugin } from \"../nuxt.js\";\nimport { loadPayload } from \"../composables/payload.js\";\nimport { onNuxtReady } from \"../composables/ready.js\";\nimport { useRouter } from \"../composables/router.js\";\nimport { getAppManifest } from \"../composables/manifest.js\";\nimport { appManifest as isAppManifestEnabled } from \"#build/nuxt.config.mjs\";\nexport default defineNuxtPlugin({\n  name: \"nuxt:payload\",\n  setup(nuxtApp) {\n    if (false) {\n      return;\n    }\n    useRouter().beforeResolve(async (to, from) => {\n      if (to.path === from.path) {\n        return;\n      }\n      const payload = await loadPayload(to.path);\n      if (!payload) {\n        return;\n      }\n      Object.assign(nuxtApp.static.data, payload.data);\n    });\n    onNuxtReady(() => {\n      nuxtApp.hooks.hook(\"link:prefetch\", async (url) => {\n        if (!parseURL(url).protocol) {\n          await loadPayload(url);\n        }\n      });\n      if (isAppManifestEnabled && navigator.connection?.effectiveType !== \"slow-2g\") {\n        setTimeout(getAppManifest, 1e3);\n      }\n    });\n  }\n});\n",
      "start": 1721076613387,
      "end": 1721076613387,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1721076613387,
      "end": 1721076613387,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721076613388,
      "end": 1721076613388,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721076613388,
      "end": 1721076613388,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721076613388,
      "end": 1721076613388,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721076613388,
      "end": 1721076613389,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721076613389,
      "end": 1721076613389,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721076613389,
      "end": 1721076613389,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721076613389,
      "end": 1721076613389,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721076613390,
      "end": 1721076613390,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721076613390,
      "end": 1721076613391,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721076613391,
      "end": 1721076613391,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1721076613391,
      "end": 1721076613392,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1721076613392,
      "end": 1721076613392,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721076613392,
      "end": 1721076613392,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721076613392,
      "end": 1721076613392,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721076613392,
      "end": 1721076613392,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721076613392,
      "end": 1721076613393,
      "order": "normal"
    }
  ]
}
