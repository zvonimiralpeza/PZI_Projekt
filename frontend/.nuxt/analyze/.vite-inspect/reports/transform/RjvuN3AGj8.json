{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/directives/click-outside/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Utilities\nimport { attachedRoot } from \"../../util/index.mjs\"; // Types\nfunction defaultConditional() {\n  return true;\n}\nfunction checkEvent(e, el, binding) {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false;\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el);\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot && root.host === e.target) return false;\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = (typeof binding.value === 'object' && binding.value.include || (() => []))();\n  // Add the root element for the component this directive was defined on\n  elements.push(el);\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el?.contains(e.target));\n}\nfunction checkIsActive(e, binding) {\n  const isActive = typeof binding.value === 'object' && binding.value.closeConditional || defaultConditional;\n  return isActive(e);\n}\nfunction directive(e, el, binding) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value.handler;\n  el._clickOutside.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e);\n  }, 0);\n}\nfunction handleShadow(el, callback) {\n  const root = attachedRoot(el);\n  callback(document);\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root);\n  }\n}\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted(el, binding) {\n    const onClick = e => directive(e, el, binding);\n    const onMousedown = e => {\n      el._clickOutside.lastMousedownWasOutside = checkEvent(e, el, binding);\n    };\n    handleShadow(el, app => {\n      app.addEventListener('click', onClick, true);\n      app.addEventListener('mousedown', onMousedown, true);\n    });\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: false\n      };\n    }\n    el._clickOutside[binding.instance.$.uid] = {\n      onClick,\n      onMousedown\n    };\n  },\n  unmounted(el, binding) {\n    if (!el._clickOutside) return;\n    handleShadow(el, app => {\n      if (!app || !el._clickOutside?.[binding.instance.$.uid]) return;\n      const {\n        onClick,\n        onMousedown\n      } = el._clickOutside[binding.instance.$.uid];\n      app.removeEventListener('click', onClick, true);\n      app.removeEventListener('mousedown', onMousedown, true);\n    });\n    delete el._clickOutside[binding.instance.$.uid];\n  }\n};\nexport default ClickOutside;\n//# sourceMappingURL=index.mjs.map",
      "start": 1721074022755,
      "end": 1721074022963,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721074022963,
      "end": 1721074022963,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721074022964,
      "end": 1721074022964,
      "order": "normal"
    }
  ]
}
