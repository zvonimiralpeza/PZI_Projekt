{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/components/VChipGroup/VChipGroup.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VChipGroup.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\"; // Utilities\nimport { toRef } from 'vue';\nimport { deepEqual, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group');\nexport const makeVChipGroupProps = propsFactory({\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function,\n    default: deepEqual\n  },\n  ...makeComponentProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-chip--selected'\n  }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'tonal'\n  })\n}, 'VChipGroup');\nexport const VChipGroup = genericComponent()({\n  name: 'VChipGroup',\n  props: makeVChipGroupProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      isSelected,\n      select,\n      next,\n      prev,\n      selected\n    } = useGroup(props, VChipGroupSymbol);\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant')\n      }\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-chip-group', {\n        'v-chip-group--column': props.column\n      }, themeClasses.value, props.class],\n      \"style\": props.style\n    }, {\n      default: () => [slots.default?.({\n        isSelected,\n        select,\n        next,\n        prev,\n        selected: selected.value\n      })]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VChipGroup.mjs.map",
      "start": 1726159558252,
      "end": 1726159558604,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1726159558604,
      "end": 1726159558604,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726159558604,
      "end": 1726159558605,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726159558605,
      "end": 1726159558605,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726159558605,
      "end": 1726159558605,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726159558605,
      "end": 1726159558605,
      "order": "normal"
    }
  ]
}
