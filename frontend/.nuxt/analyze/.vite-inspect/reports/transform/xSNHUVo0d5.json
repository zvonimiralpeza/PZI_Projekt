{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/util/color/APCA.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * WCAG 3.0 APCA perceptual contrast algorithm from https://github.com/Myndex/SAPC-APCA\n * @licence https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @see https://www.w3.org/WAI/GL/task-forces/silver/wiki/Visual_Contrast_of_Text_Subgroup\n */\n// Types\n\n// MAGICAL NUMBERS\n\n// sRGB Conversion to Relative Luminance (Y)\n\n// Transfer Curve (aka \"Gamma\") for sRGB linearization\n// Simple power curve vs piecewise described in docs\n// Essentially, 2.4 best models actual display\n// characteristics in combination with the total method\nconst mainTRC = 2.4;\nconst Rco = 0.2126729; // sRGB Red Coefficient (from matrix)\nconst Gco = 0.7151522; // sRGB Green Coefficient (from matrix)\nconst Bco = 0.0721750; // sRGB Blue Coefficient (from matrix)\n\n// For Finding Raw SAPC Contrast from Relative Luminance (Y)\n\n// Constants for SAPC Power Curve Exponents\n// One pair for normal text, and one for reverse\n// These are the \"beating heart\" of SAPC\nconst normBG = 0.55;\nconst normTXT = 0.58;\nconst revTXT = 0.57;\nconst revBG = 0.62;\n\n// For Clamping and Scaling Values\n\nconst blkThrs = 0.03; // Level that triggers the soft black clamp\nconst blkClmp = 1.45; // Exponent for the soft black clamp curve\nconst deltaYmin = 0.0005; // Lint trap\nconst scaleBoW = 1.25; // Scaling for dark text on light\nconst scaleWoB = 1.25; // Scaling for light text on dark\nconst loConThresh = 0.078; // Threshold for new simple offset scale\nconst loConFactor = 12.82051282051282; // = 1/0.078,\nconst loConOffset = 0.06; // The simple offset\nconst loClip = 0.001; // Output clip (lint trap #2)\n\nexport function APCAcontrast(text, background) {\n  // Linearize sRGB\n  const Rtxt = (text.r / 255) ** mainTRC;\n  const Gtxt = (text.g / 255) ** mainTRC;\n  const Btxt = (text.b / 255) ** mainTRC;\n  const Rbg = (background.r / 255) ** mainTRC;\n  const Gbg = (background.g / 255) ** mainTRC;\n  const Bbg = (background.b / 255) ** mainTRC;\n\n  // Apply the standard coefficients and sum to Y\n  let Ytxt = Rtxt * Rco + Gtxt * Gco + Btxt * Bco;\n  let Ybg = Rbg * Rco + Gbg * Gco + Bbg * Bco;\n\n  // Soft clamp Y when near black.\n  // Now clamping all colors to prevent crossover errors\n  if (Ytxt <= blkThrs) Ytxt += (blkThrs - Ytxt) ** blkClmp;\n  if (Ybg <= blkThrs) Ybg += (blkThrs - Ybg) ** blkClmp;\n\n  // Return 0 Early for extremely low ∆Y (lint trap #1)\n  if (Math.abs(Ybg - Ytxt) < deltaYmin) return 0.0;\n\n  // SAPC CONTRAST\n\n  let outputContrast; // For weighted final values\n  if (Ybg > Ytxt) {\n    // For normal polarity, black text on white\n    // Calculate the SAPC contrast value and scale\n\n    const SAPC = (Ybg ** normBG - Ytxt ** normTXT) * scaleBoW;\n\n    // NEW! SAPC SmoothScale™\n    // Low Contrast Smooth Scale Rollout to prevent polarity reversal\n    // and also a low clip for very low contrasts (lint trap #2)\n    // much of this is for very low contrasts, less than 10\n    // therefore for most reversing needs, only loConOffset is important\n    outputContrast = SAPC < loClip ? 0.0 : SAPC < loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC - loConOffset;\n  } else {\n    // For reverse polarity, light text on dark\n    // WoB should always return negative value.\n\n    const SAPC = (Ybg ** revBG - Ytxt ** revTXT) * scaleWoB;\n    outputContrast = SAPC > -loClip ? 0.0 : SAPC > -loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC + loConOffset;\n  }\n  return outputContrast * 100;\n}\n//# sourceMappingURL=APCA.mjs.map",
      "start": 1721074021457,
      "end": 1721074021681,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1721074021681,
      "end": 1721074021681,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1721074021681,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721074021682,
      "end": 1721074021682,
      "order": "normal"
    }
  ]
}
