{
  "resolvedId": "C:/Users/DT User/Desktop/ProjektPZI/frontend/node_modules/vuetify/lib/composables/router.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Utilities\nimport { computed, nextTick, onScopeDispose, resolveDynamicComponent, toRef } from 'vue';\nimport { deepEqual, getCurrentInstance, hasEvent, IN_BROWSER, propsFactory } from \"../util/index.mjs\"; // Types\nexport function useRoute() {\n  const vm = getCurrentInstance('useRoute');\n  return computed(() => vm?.proxy?.$route);\n}\nexport function useRouter() {\n  return getCurrentInstance('useRouter')?.proxy?.$router;\n}\nexport function useLink(props, attrs) {\n  const RouterLink = resolveDynamicComponent('RouterLink');\n  const isLink = computed(() => !!(props.href || props.to));\n  const isClickable = computed(() => {\n    return isLink?.value || hasEvent(attrs, 'click') || hasEvent(props, 'click');\n  });\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href')\n    };\n  }\n  const link = props.to ? RouterLink.useLink(props) : undefined;\n  const route = useRoute();\n  return {\n    isLink,\n    isClickable,\n    route: link?.route,\n    navigate: link?.navigate,\n    isActive: link && computed(() => {\n      if (!props.exact) return link.isActive?.value;\n      if (!route.value) return link.isExactActive?.value;\n      return link.isExactActive?.value && deepEqual(link.route.value.query, route.value.query);\n    }),\n    href: computed(() => props.to ? link?.route.value.href : props.href)\n  };\n}\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object],\n  exact: Boolean\n}, 'router');\nlet inTransition = false;\nexport function useBackButton(router, cb) {\n  let popped = false;\n  let removeBefore;\n  let removeAfter;\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate);\n      removeBefore = router?.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next());\n        } else {\n          popped ? cb(next) : next();\n        }\n        inTransition = true;\n      });\n      removeAfter = router?.afterEach(() => {\n        inTransition = false;\n      });\n    });\n    onScopeDispose(() => {\n      window.removeEventListener('popstate', onPopstate);\n      removeBefore?.();\n      removeAfter?.();\n    });\n  }\n  function onPopstate(e) {\n    if (e.state?.replaced) return;\n    popped = true;\n    setTimeout(() => popped = false);\n  }\n}\n//# sourceMappingURL=router.mjs.map",
      "start": 1721076110594,
      "end": 1721076112702,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721076112702,
      "end": 1721076112702,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076112703,
      "end": 1721076112703,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721076112734,
      "end": 1721076112734,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1721076112742,
      "end": 1721076112742,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1721076112746,
      "end": 1721076112746,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721076112748,
      "end": 1721076112748,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721076112752,
      "end": 1721076112752,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721076112753,
      "end": 1721076112753,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721076112753,
      "end": 1721076112754,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721076112783,
      "end": 1721076112783,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721076112785,
      "end": 1721076112785,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721076112793,
      "end": 1721076112793,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721076112795,
      "end": 1721076112796,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721076112796,
      "end": 1721076112796,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721076112796,
      "end": 1721076112796,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721076112828,
      "end": 1721076112829,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721076112830,
      "end": 1721076112830,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721076112831,
      "end": 1721076112834,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721076112835,
      "end": 1721076112836,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721076112837,
      "end": 1721076112837,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1721076112837,
      "end": 1721076112837,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1721076112837,
      "end": 1721076112837,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721076112837,
      "end": 1721076112837,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721076112838,
      "end": 1721076112838,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721076112841,
      "end": 1721076112841,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721076112841,
      "end": 1721076112841,
      "order": "normal"
    }
  ]
}
